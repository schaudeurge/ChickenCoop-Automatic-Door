

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 09 12:50:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 12/10/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    77   000000                     
    78 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    79   000000                     
    80 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    81   000000                     
    82 ;; Function _Timer0_Start is unused but had its address taken
    83   000000                     
    84 ;; Function _Timer0_Stop is unused but had its address taken
    85   000000                     
    86 ;; Function _Timer0_PeriodCountSet is unused but had its address taken
    87   000000                     
    88                           	psect	smallconst
    89   000600                     __psmallconst:
    90                           	callstack 0
    91   000600  00                 	db	0
    92   000601                     _Timer0:
    93                           	callstack 0
    94   000601  26                 	db	low _Timer0_Initialize
    95   000602  0C                 	db	high _Timer0_Initialize
    96   000603  00                 	db	0
    97   000604  00                 	db	0
    98   000605  00                 	db	0
    99   000606  00                 	db	0
   100   000607  00                 	db	0
   101   000608  00                 	db	0
   102   000609  D8                 	db	low _Timer0_OverflowCallbackRegister
   103   00060A  0C                 	db	high _Timer0_OverflowCallbackRegister
   104   00060B  00                 	db	0
   105   00060C  00                 	db	0
   106   00060D                     __end_of_Timer0:
   107                           	callstack 0
   108   000000                     _TMR0L	set	4054
   109   000000                     _TMR0H	set	4055
   110   000000                     _T0CONbits	set	4053
   111   000000                     _IOCB	set	3965
   112   000000                     _INTCON3bits	set	4080
   113   000000                     _INTCON2bits	set	4081
   114   000000                     _INTCONbits	set	4082
   115   000000                     _ADCON0	set	4034
   116   000000                     _ADRESL	set	4035
   117   00060D  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           	psect	nvCOMRAM
   120   000039                     __pnvCOMRAM:
   121                           	callstack 0
   122   000039                     _Timer0_OverflowCallback:
   123                           	callstack 0
   124   000039                     	ds	2
   125   00003B                     _INT2_InterruptHandler:
   126                           	callstack 0
   127   00003B                     	ds	2
   128   00003D                     _INT1_InterruptHandler:
   129                           	callstack 0
   130   00003D                     	ds	2
   131   00003F                     _INT0_InterruptHandler:
   132                           	callstack 0
   133   00003F                     	ds	2
   134   000000                     _TRISBbits	set	3987
   135   000000                     _LATBbits	set	3978
   136   000000                     _ADCON0bits	set	4034
   137   000000                     _T0CON	set	4053
   138   000000                     _WPUB	set	3964
   139   000000                     _ANSEL	set	3966
   140   000000                     _LATA	set	3977
   141   000000                     _OSCTUNE	set	3995
   142   000000                     _PIR1bits	set	3998
   143   000000                     _ADCON2	set	4032
   144   000000                     _ADCON1	set	4033
   145   000000                     _RCONbits	set	4048
   146   000000                     _OSCCON	set	4051
   147   000000                     _ADRESH	set	4036
   148   000000                     _WDTCON	set	4049
   149   000000                     _TRISA	set	3986
   150   000000                     _LATE	set	3981
   151   000000                     _LATD	set	3980
   152   000000                     _LATC	set	3979
   153   000000                     _LATB	set	3978
   154   000000                     _TRISE	set	3990
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _PORTBbits	set	3969
   159   000000                     _ANSELH	set	3967
   160                           
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   000C66                     __pcinit:
   165                           	callstack 0
   166   000C66                     start_initialization:
   167                           	callstack 0
   168   000C66                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Clear objects allocated to COMRAM (36 bytes)
   172   000C66  EE00  F001         	lfsr	0,__pbssCOMRAM
   173   000C6A  0E24               	movlw	36
   174   000C6C                     clear_0:
   175   000C6C  6AEE               	clrf	postinc0,c
   176   000C6E  06E8               	decf	wreg,f,c
   177   000C70  E1FD               	bnz	clear_0
   178   000C72                     end_of_initialization:
   179                           	callstack 0
   180   000C72                     __end_of__initialization:
   181                           	callstack 0
   182   000C72  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183   000C74  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184   000C76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185   000C78  6EF8               	movwf	tblptru,c
   186   000C7A  0100               	movlb	0
   187   000C7C  EF07  F003         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190   000001                     __pbssCOMRAM:
   191                           	callstack 0
   192   000001                     _ti16uLuminosityAdcHistory:
   193                           	callstack 0
   194   000001                     	ds	16
   195   000011                     _i16uMotorSwitchDelay:
   196                           	callstack 0
   197   000011                     	ds	2
   198   000013                     _i16uDebug:
   199                           	callstack 0
   200   000013                     	ds	2
   201   000015                     _i16uCntLuminosityHigh:
   202                           	callstack 0
   203   000015                     	ds	2
   204   000017                     _i16uCntLuminosityLow:
   205                           	callstack 0
   206   000017                     	ds	2
   207   000019                     _i16uLuminosityAdcFiltered:
   208                           	callstack 0
   209   000019                     	ds	2
   210   00001B                     _i16uLuminosityAdcUnFiltered:
   211                           	callstack 0
   212   00001B                     	ds	2
   213   00001D                     _timer0ReloadVal:
   214                           	callstack 0
   215   00001D                     	ds	2
   216   00001F                     getAdcFiltered@i8uHistoryIndex:
   217                           	callstack 0
   218   00001F                     	ds	1
   219   000020                     main@bBpManualPress:
   220                           	callstack 0
   221   000020                     	ds	1
   222   000021                     main@i8uBpSw1Debounce:
   223                           	callstack 0
   224   000021                     	ds	1
   225   000022                     main@i8uNbOfLedToSet:
   226                           	callstack 0
   227   000022                     	ds	1
   228   000023                     _eDoorPosition:
   229                           	callstack 0
   230   000023                     	ds	1
   231   000024                     _bIsMainLoopTimingIsOver:
   232                           	callstack 0
   233   000024                     	ds	1
   234                           
   235                           	psect	cstackCOMRAM
   236   000025                     __pcstackCOMRAM:
   237                           	callstack 0
   238   000025                     ??_INTERRUPT_InterruptManager:
   239   000025                     
   240                           ; 2 bytes @ 0x0
   241   000025                     	ds	2
   242   000027                     ??_Timer0_Initialize:
   243   000027                     ??_MOT_SwitchOnMotor:
   244   000027                     ?_getAdcFiltered:
   245                           	callstack 0
   246   000027                     ?_ADC_GetConversion:
   247                           	callstack 0
   248   000027                     ?___aldiv:
   249                           	callstack 0
   250   000027                     detectSunRise@bReturnVal:
   251                           	callstack 0
   252   000027                     detectSunSet@bReturnVal:
   253                           	callstack 0
   254   000027                     RBT_simulateButtonPush@i8uNbOfPush:
   255                           	callstack 0
   256   000027                     INT0_SetInterruptHandler@InterruptHandler:
   257                           	callstack 0
   258   000027                     INT1_SetInterruptHandler@InterruptHandler:
   259                           	callstack 0
   260   000027                     INT2_SetInterruptHandler@InterruptHandler:
   261                           	callstack 0
   262   000027                     Timer0_OverflowCallbackRegister@CallbackHandler:
   263                           	callstack 0
   264   000027                     getAdcFiltered@i16uAdcUnfiltered:
   265                           	callstack 0
   266   000027                     ___aldiv@dividend:
   267                           	callstack 0
   268                           
   269                           ; 4 bytes @ 0x2
   270   000027                     	ds	1
   271   000028                     RBT_simulateButtonPush@i16uPushDuration:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x3
   275   000028                     	ds	1
   276   000029                     ??_getAdcFiltered:
   277   000029                     ??_ADC_GetConversion:
   278   000029                     
   279                           ; 1 bytes @ 0x4
   280   000029                     	ds	1
   281   00002A                     ??_RBT_simulateButtonPush:
   282                           
   283                           ; 1 bytes @ 0x5
   284   00002A                     	ds	1
   285   00002B                     ADC_GetConversion@channel:
   286                           	callstack 0
   287   00002B                     getAdcFiltered@i16uAdcfiltered:
   288                           	callstack 0
   289   00002B                     ___aldiv@divisor:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x6
   293   00002B                     	ds	1
   294   00002C                     RBT_simulateButtonPush@eButtonId:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x7
   298   00002C                     	ds	1
   299   00002D                     getAdcFiltered@i:
   300                           	callstack 0
   301   00002D                     RBT_simulateButtonPush@i8uBackupLedArray:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x8
   305   00002D                     	ds	1
   306   00002E                     RBT_simulateButtonPush@i:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x9
   310   00002E                     	ds	1
   311   00002F                     ___aldiv@counter:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0xA
   315   00002F                     	ds	1
   316   000030                     ___aldiv@sign:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xB
   320   000030                     	ds	1
   321   000031                     ___aldiv@quotient:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0xC
   325   000031                     	ds	4
   326   000035                     ??_main:
   327                           
   328                           ; 1 bytes @ 0x10
   329   000035                     	ds	2
   330   000037                     main@i8uBarGraphValue:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x12
   334   000037                     	ds	1
   335   000038                     main@i:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x13
   339   000038                     	ds	1
   340                           
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 101 in file "source/main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  i               1   19[COMRAM] unsigned char 
   351 ;;  i8uBarGraphV    1   18[COMRAM] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  2  315[None  ] int 
   354 ;; Registers used:
   355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   361 ;;      Params:         0       0       0       0       0       0       0
   362 ;;      Locals:         2       0       0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0       0       0
   364 ;;      Totals:         4       0       0       0       0       0       0
   365 ;;Total ram usage:        4 bytes
   366 ;; Hardware stack levels required when called: 6
   367 ;; This function calls:
   368 ;;		_ADC_GetConversion
   369 ;;		_MOT_SwitchOffMotor
   370 ;;		_MOT_SwitchOnMotor
   371 ;;		_PIN_MANAGER_RefreshConfig
   372 ;;		_RBT_simulateButtonPush
   373 ;;		_SYSTEM_Initialize
   374 ;;		_Timer0_OverflowCallbackRegister
   375 ;;		___aldiv
   376 ;;		_detectSunRise
   377 ;;		_detectSunSet
   378 ;;		_getAdcFiltered
   379 ;;		_manageSoftTimerTick
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386   00060E                     __ptext0:
   387                           	callstack 0
   388   00060E                     _main:
   389                           	callstack 25
   390   00060E                     
   391                           ;source/main.c: 107:     uint8_t i = 0;
   392   00060E  0E00               	movlw	0
   393   000610  6E38               	movwf	main@i^0,c
   394   000612                     
   395                           ;source/main.c: 110:     SYSTEM_Initialize();
   396   000612  EC40  F006         	call	_SYSTEM_Initialize	;wreg free
   397   000616                     
   398                           ;source/main.c: 111:     Timer0_OverflowCallbackRegister(Timer0_OverflowCallback);
   399   000616  0E16               	movlw	low _Timer0_OverflowCallback@main$F694
   400   000618  6E27               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^0,c
   401   00061A  0E0D               	movlw	high _Timer0_OverflowCallback@main$F694
   402   00061C  6E28               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^0,c
   403   00061E  EC6C  F006         	call	_Timer0_OverflowCallbackRegister	;wreg free
   404   000622                     
   405                           ;source/main.c: 114:     (INTCONbits.GIE = 1);
   406   000622  8EF2               	bsf	242,7,c	;volatile
   407   000624                     
   408                           ;source/main.c: 115:     (INTCONbits.PEIE = 1);
   409   000624  8CF2               	bsf	242,6,c	;volatile
   410                           
   411                           ;source/main.c: 118:     for( i=0 ; i<8 ; i++ )
   412   000626  0E00               	movlw	0
   413   000628  6E38               	movwf	main@i^0,c
   414   00062A                     l322:
   415   00062A  0004               	clrwdt		;# 
   416   00062C                     
   417                           ;source/main.c: 122:         i16uLuminosityAdcUnFiltered = ADC_GetConversion(AN_LIGHT);
   418   00062C  0E01               	movlw	1
   419   00062E  EC91  F005         	call	_ADC_GetConversion
   420   000632  C027  F01B         	movff	?_ADC_GetConversion,_i16uLuminosityAdcUnFiltered
   421   000636  C028  F01C         	movff	?_ADC_GetConversion+1,_i16uLuminosityAdcUnFiltered+1
   422   00063A                     
   423                           ;source/main.c: 123:         i16uLuminosityAdcFiltered = getAdcFiltered(i16uLuminosityAd
      +                          cUnFiltered);
   424   00063A  C01B  F027         	movff	_i16uLuminosityAdcUnFiltered,getAdcFiltered@i16uAdcUnfiltered
   425   00063E  C01C  F028         	movff	_i16uLuminosityAdcUnFiltered+1,getAdcFiltered@i16uAdcUnfiltered+1
   426   000642  ECEC  F004         	call	_getAdcFiltered	;wreg free
   427   000646  C027  F019         	movff	?_getAdcFiltered,_i16uLuminosityAdcFiltered
   428   00064A  C028  F01A         	movff	?_getAdcFiltered+1,_i16uLuminosityAdcFiltered+1
   429   00064E                     
   430                           ;source/main.c: 124:         _delay((unsigned long)((1)*(1000000/4000.0)));
   431   00064E  0E53               	movlw	83
   432   000650                     u657:
   433   000650  2EE8               	decfsz	wreg,f,c
   434   000652  D7FE               	bra	u657
   435   000654  0000               	nop	
   436   000656                     
   437                           ;source/main.c: 125:     }
   438   000656  2A38               	incf	main@i^0,f,c
   439   000658  0E07               	movlw	7
   440   00065A  6438               	cpfsgt	main@i^0,c
   441   00065C  EF32  F003         	goto	u541
   442   000660  EF34  F003         	goto	u540
   443   000664                     u541:
   444   000664  EF15  F003         	goto	l322
   445   000668                     u540:
   446   000668  EF02  F004         	goto	l1732
   447   00066C                     l1668:
   448                           
   449                           ;source/main.c: 132:         {;source/main.c: 133:             bIsMainLoopTimingIsOver =
      +                           0;
   450   00066C  0E00               	movlw	0
   451   00066E  6E24               	movwf	_bIsMainLoopTimingIsOver^0,c	;volatile
   452   000670  0004               	clrwdt		;# 
   453   000672                     
   454                           ;source/main.c: 135:             PIN_MANAGER_RefreshConfig();
   455   000672  ECFF  F005         	call	_PIN_MANAGER_RefreshConfig	;wreg free
   456   000676                     
   457                           ;source/main.c: 140:             i16uLuminosityAdcUnFiltered = ADC_GetConversion(AN_LIGH
      +                          T);
   458   000676  0E01               	movlw	1
   459   000678  EC91  F005         	call	_ADC_GetConversion
   460   00067C  C027  F01B         	movff	?_ADC_GetConversion,_i16uLuminosityAdcUnFiltered
   461   000680  C028  F01C         	movff	?_ADC_GetConversion+1,_i16uLuminosityAdcUnFiltered+1
   462   000684                     
   463                           ;source/main.c: 141:             i16uLuminosityAdcFiltered = getAdcFiltered(i16uLuminosi
      +                          tyAdcUnFiltered);
   464   000684  C01B  F027         	movff	_i16uLuminosityAdcUnFiltered,getAdcFiltered@i16uAdcUnfiltered
   465   000688  C01C  F028         	movff	_i16uLuminosityAdcUnFiltered+1,getAdcFiltered@i16uAdcUnfiltered+1
   466   00068C  ECEC  F004         	call	_getAdcFiltered	;wreg free
   467   000690  C027  F019         	movff	?_getAdcFiltered,_i16uLuminosityAdcFiltered
   468   000694  C028  F01A         	movff	?_getAdcFiltered+1,_i16uLuminosityAdcFiltered+1
   469   000698                     
   470                           ;source/main.c: 144:             if ( detectSunRise() == 1 )
   471   000698  EC34  F005         	call	_detectSunRise	;wreg free
   472   00069C  06E8               	decf	wreg,f,c
   473   00069E  A4D8               	btfss	status,2,c
   474   0006A0  EF54  F003         	goto	u551
   475   0006A4  EF56  F003         	goto	u550
   476   0006A8                     u551:
   477   0006A8  EF65  F003         	goto	l1684
   478   0006AC                     u550:
   479   0006AC                     
   480                           ;source/main.c: 145:             {;source/main.c: 146:                 MOT_SwitchOnMotor
      +                          ();
   481   0006AC  EC23  F006         	call	_MOT_SwitchOnMotor	;wreg free
   482   0006B0                     
   483                           ;source/main.c: 147:                 RBT_simulateButtonPush(REMOTE_BUTTON_UP,3,500);
   484   0006B0  0E03               	movlw	3
   485   0006B2  6E27               	movwf	RBT_simulateButtonPush@i8uNbOfPush^0,c
   486   0006B4  0E01               	movlw	1
   487   0006B6  6E29               	movwf	(RBT_simulateButtonPush@i16uPushDuration+1)^0,c
   488   0006B8  0EF4               	movlw	244
   489   0006BA  6E28               	movwf	RBT_simulateButtonPush@i16uPushDuration^0,c
   490   0006BC  0E00               	movlw	0
   491   0006BE  EC95  F004         	call	_RBT_simulateButtonPush
   492   0006C2                     
   493                           ;source/main.c: 148:                 eDoorPosition = DOOR_POSITION_OPEN;
   494   0006C2  0E02               	movlw	2
   495   0006C4  6E23               	movwf	_eDoorPosition^0,c
   496                           
   497                           ;source/main.c: 149:             }
   498   0006C6  EF7C  F003         	goto	l1692
   499   0006CA                     l1684:
   500   0006CA  EC63  F005         	call	_detectSunSet	;wreg free
   501   0006CE  06E8               	decf	wreg,f,c
   502   0006D0  A4D8               	btfss	status,2,c
   503   0006D2  EF6D  F003         	goto	u561
   504   0006D6  EF6F  F003         	goto	u560
   505   0006DA                     u561:
   506   0006DA  EF7C  F003         	goto	l1692
   507   0006DE                     u560:
   508   0006DE                     
   509                           ;source/main.c: 151:             {;source/main.c: 152:                 MOT_SwitchOnMotor
      +                          ();
   510   0006DE  EC23  F006         	call	_MOT_SwitchOnMotor	;wreg free
   511   0006E2                     
   512                           ;source/main.c: 153:                 RBT_simulateButtonPush(REMOTE_BUTTON_DOWN,3,500);
   513   0006E2  0E03               	movlw	3
   514   0006E4  6E27               	movwf	RBT_simulateButtonPush@i8uNbOfPush^0,c
   515   0006E6  0E01               	movlw	1
   516   0006E8  6E29               	movwf	(RBT_simulateButtonPush@i16uPushDuration+1)^0,c
   517   0006EA  0EF4               	movlw	244
   518   0006EC  6E28               	movwf	RBT_simulateButtonPush@i16uPushDuration^0,c
   519   0006EE  0E01               	movlw	1
   520   0006F0  EC95  F004         	call	_RBT_simulateButtonPush
   521   0006F4                     
   522                           ;source/main.c: 154:                 eDoorPosition = DOOR_POSITION_CLOSE;
   523   0006F4  0E01               	movlw	1
   524   0006F6  6E23               	movwf	_eDoorPosition^0,c
   525   0006F8                     l1692:
   526                           
   527                           ;source/main.c: 162:             if ( i16uCntLuminosityLow > i16uCntLuminosityHigh )
   528   0006F8  5017               	movf	_i16uCntLuminosityLow^0,w,c
   529   0006FA  5C15               	subwf	_i16uCntLuminosityHigh^0,w,c
   530   0006FC  5018               	movf	(_i16uCntLuminosityLow+1)^0,w,c
   531   0006FE  5816               	subwfb	(_i16uCntLuminosityHigh+1)^0,w,c
   532   000700  B0D8               	btfsc	status,0,c
   533   000702  EF85  F003         	goto	u571
   534   000706  EF87  F003         	goto	u570
   535   00070A                     u571:
   536   00070A  EF9B  F003         	goto	l1696
   537   00070E                     u570:
   538   00070E                     
   539                           ;source/main.c: 163:             {;source/main.c: 164:                 i8uNbOfLedToSet =
      +                           (uint8_t) (i16uCntLuminosityLow / ((2*60000/10)/8));
   540   00070E  C017  F027         	movff	_i16uCntLuminosityLow,___aldiv@dividend
   541   000712  C018  F028         	movff	_i16uCntLuminosityLow+1,___aldiv@dividend+1
   542   000716  6A29               	clrf	(___aldiv@dividend+2)^0,c
   543   000718  6A2A               	clrf	(___aldiv@dividend+3)^0,c
   544   00071A  0EDC               	movlw	220
   545   00071C  6E2B               	movwf	___aldiv@divisor^0,c
   546   00071E  0E05               	movlw	5
   547   000720  6E2C               	movwf	(___aldiv@divisor+1)^0,c
   548   000722  0E00               	movlw	0
   549   000724  6E2D               	movwf	(___aldiv@divisor+2)^0,c
   550   000726  0E00               	movlw	0
   551   000728  6E2E               	movwf	(___aldiv@divisor+3)^0,c
   552   00072A  EC0F  F004         	call	___aldiv	;wreg free
   553   00072E  5027               	movf	?___aldiv^0,w,c
   554   000730  6E22               	movwf	main@i8uNbOfLedToSet^0,c
   555                           
   556                           ;source/main.c: 165:             }
   557   000732  EFAD  F003         	goto	l1698
   558   000736                     l1696:
   559                           
   560                           ;source/main.c: 167:             {;source/main.c: 168:                 i8uNbOfLedToSet =
      +                           (uint8_t) (i16uCntLuminosityHigh / ((2*60000/10)/8));
   561   000736  C015  F027         	movff	_i16uCntLuminosityHigh,___aldiv@dividend
   562   00073A  C016  F028         	movff	_i16uCntLuminosityHigh+1,___aldiv@dividend+1
   563   00073E  6A29               	clrf	(___aldiv@dividend+2)^0,c
   564   000740  6A2A               	clrf	(___aldiv@dividend+3)^0,c
   565   000742  0EDC               	movlw	220
   566   000744  6E2B               	movwf	___aldiv@divisor^0,c
   567   000746  0E05               	movlw	5
   568   000748  6E2C               	movwf	(___aldiv@divisor+1)^0,c
   569   00074A  0E00               	movlw	0
   570   00074C  6E2D               	movwf	(___aldiv@divisor+2)^0,c
   571   00074E  0E00               	movlw	0
   572   000750  6E2E               	movwf	(___aldiv@divisor+3)^0,c
   573   000752  EC0F  F004         	call	___aldiv	;wreg free
   574   000756  5027               	movf	?___aldiv^0,w,c
   575   000758  6E22               	movwf	main@i8uNbOfLedToSet^0,c
   576   00075A                     l1698:
   577                           
   578                           ;source/main.c: 170:             i8uBarGraphValue = 0;
   579   00075A  0E00               	movlw	0
   580   00075C  6E37               	movwf	main@i8uBarGraphValue^0,c
   581   00075E                     
   582                           ;source/main.c: 171:             if (i8uNbOfLedToSet != 0 )
   583   00075E  5022               	movf	main@i8uNbOfLedToSet^0,w,c
   584   000760  B4D8               	btfsc	status,2,c
   585   000762  EFB5  F003         	goto	u581
   586   000766  EFB7  F003         	goto	u580
   587   00076A                     u581:
   588   00076A  EFD3  F003         	goto	l337
   589   00076E                     u580:
   590   00076E                     
   591                           ;source/main.c: 172:             {;source/main.c: 173:                 for ( i=0 ; i<i8u
      +                          NbOfLedToSet ; i++ )
   592   00076E  0E00               	movlw	0
   593   000770  6E38               	movwf	main@i^0,c
   594   000772  EFCA  F003         	goto	l1708
   595   000776                     l1704:
   596                           
   597                           ;source/main.c: 174:                 {;source/main.c: 176:                     i8uBarGra
      +                          phValue += (1<<i);
   598   000776  C038  F035         	movff	main@i,??_main
   599   00077A  0E01               	movlw	1
   600   00077C  6E36               	movwf	(??_main+1)^0,c
   601   00077E  2A35               	incf	??_main^0,f,c
   602   000780  EFC4  F003         	goto	u594
   603   000784                     u595:
   604   000784  90D8               	bcf	status,0,c
   605   000786  3636               	rlcf	(??_main+1)^0,f,c
   606   000788                     u594:
   607   000788  2E35               	decfsz	??_main^0,f,c
   608   00078A  EFC2  F003         	goto	u595
   609   00078E  5036               	movf	(??_main+1)^0,w,c
   610   000790  2637               	addwf	main@i8uBarGraphValue^0,f,c
   611   000792                     
   612                           ;source/main.c: 177:                 }
   613   000792  2A38               	incf	main@i^0,f,c
   614   000794                     l1708:
   615   000794  5022               	movf	main@i8uNbOfLedToSet^0,w,c
   616   000796  5C38               	subwf	main@i^0,w,c
   617   000798  A0D8               	btfss	status,0,c
   618   00079A  EFD1  F003         	goto	u601
   619   00079E  EFD3  F003         	goto	u600
   620   0007A2                     u601:
   621   0007A2  EFBB  F003         	goto	l1704
   622   0007A6                     u600:
   623   0007A6                     l337:
   624                           
   625                           ;source/main.c: 181:             LATD = i8uBarGraphValue;
   626   0007A6  C037  FF8C         	movff	main@i8uBarGraphValue,3980	;volatile
   627                           
   628                           ;source/main.c: 185:             if ( PORTBbits.RB0 == 0 )
   629   0007AA  B081               	btfsc	129,0,c	;volatile
   630   0007AC  EFDA  F003         	goto	u611
   631   0007B0  EFDC  F003         	goto	u610
   632   0007B4                     u611:
   633   0007B4  EFF0  F003         	goto	l1722
   634   0007B8                     u610:
   635   0007B8                     
   636                           ;source/main.c: 186:             {;source/main.c: 188:                 if( i8uBpSw1Debou
      +                          nce < (100/10) )
   637   0007B8  0E0A               	movlw	10
   638   0007BA  6021               	cpfslt	main@i8uBpSw1Debounce^0,c
   639   0007BC  EFE2  F003         	goto	u621
   640   0007C0  EFE4  F003         	goto	u620
   641   0007C4                     u621:
   642   0007C4  EFE7  F003         	goto	l1714
   643   0007C8                     u620:
   644   0007C8                     
   645                           ;source/main.c: 189:                 {;source/main.c: 190:                     i8uBpSw1D
      +                          ebounce++;
   646   0007C8  2A21               	incf	main@i8uBpSw1Debounce^0,f,c
   647                           
   648                           ;source/main.c: 191:                 }
   649   0007CA  EF00  F004         	goto	l1730
   650   0007CE                     l1714:
   651                           
   652                           ;source/main.c: 193:                 {;source/main.c: 195:                     MOT_Switc
      +                          hOnMotor();
   653   0007CE  EC23  F006         	call	_MOT_SwitchOnMotor	;wreg free
   654   0007D2                     
   655                           ;source/main.c: 196:                     LATD = 0xFF;
   656   0007D2  688C               	setf	140,c	;volatile
   657   0007D4                     
   658                           ;source/main.c: 197:                     bBpManualPress = 1;
   659   0007D4  0E01               	movlw	1
   660   0007D6  6E20               	movwf	main@bBpManualPress^0,c
   661   0007D8                     
   662                           ;source/main.c: 199:                     eDoorPosition = DOOR_POSITION_UNKNOWN;
   663   0007D8  0E00               	movlw	0
   664   0007DA  6E23               	movwf	_eDoorPosition^0,c
   665   0007DC  EF00  F004         	goto	l1730
   666   0007E0                     l1722:
   667                           
   668                           ;source/main.c: 203:             {;source/main.c: 204:                 i8uBpSw1Debounce 
      +                          = 0;
   669   0007E0  0E00               	movlw	0
   670   0007E2  6E21               	movwf	main@i8uBpSw1Debounce^0,c
   671   0007E4                     
   672                           ;source/main.c: 205:                 if ( bBpManualPress == 1 )
   673   0007E4  0420               	decf	main@bBpManualPress^0,w,c
   674   0007E6  A4D8               	btfss	status,2,c
   675   0007E8  EFF8  F003         	goto	u631
   676   0007EC  EFFA  F003         	goto	u630
   677   0007F0                     u631:
   678   0007F0  EF00  F004         	goto	l1730
   679   0007F4                     u630:
   680   0007F4                     
   681                           ;source/main.c: 206:                 {;source/main.c: 207:                     bBpManual
      +                          Press = 0;
   682   0007F4  0E00               	movlw	0
   683   0007F6  6E20               	movwf	main@bBpManualPress^0,c
   684                           
   685                           ;source/main.c: 208:                     LATD = 0x00;
   686   0007F8  0E00               	movlw	0
   687   0007FA  6E8C               	movwf	140,c	;volatile
   688   0007FC                     
   689                           ;source/main.c: 209:                     MOT_SwitchOffMotor();
   690   0007FC  EC66  F006         	call	_MOT_SwitchOffMotor	;wreg free
   691   000800                     l1730:
   692                           
   693                           ;source/main.c: 215:             manageSoftTimerTick();
   694   000800  EC85  F006         	call	_manageSoftTimerTick	;wreg free
   695   000804                     l1732:
   696                           
   697                           ;source/main.c: 131:         while ( bIsMainLoopTimingIsOver == 1 )
   698   000804  0424               	decf	_bIsMainLoopTimingIsOver^0,w,c	;volatile
   699   000806  B4D8               	btfsc	status,2,c
   700   000808  EF08  F004         	goto	u641
   701   00080C  EF0A  F004         	goto	u640
   702   000810                     u641:
   703   000810  EF36  F003         	goto	l1668
   704   000814                     u640:
   705   000814  0003               	sleep		;# 
   706   000816  EF02  F004         	goto	l1732
   707   00081A  EF26  F000         	goto	start
   708   00081E                     __end_of_main:
   709                           	callstack 0
   710                           
   711 ;; *************** function _manageSoftTimerTick *****************
   712 ;; Defined at:
   713 ;;		line 379 in file "source/main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   727 ;;      Params:         0       0       0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 5
   734 ;; This function calls:
   735 ;;		_MOT_manageMotorSoftwareTimer
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text1
   742   000D0A                     __ptext1:
   743                           	callstack 0
   744   000D0A                     _manageSoftTimerTick:
   745                           	callstack 25
   746   000D0A                     
   747                           ;source/main.c: 381:     MOT_manageMotorSoftwareTimer();
   748   000D0A  ECE6  F005         	call	_MOT_manageMotorSoftwareTimer	;wreg free
   749   000D0E  0012               	return		;funcret
   750   000D10                     __end_of_manageSoftTimerTick:
   751                           	callstack 0
   752                           
   753 ;; *************** function _MOT_manageMotorSoftwareTimer *****************
   754 ;; Defined at:
   755 ;;		line 68 in file "source/motor.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   769 ;;      Params:         0       0       0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; Hardware stack levels required when called: 4
   776 ;; This function calls:
   777 ;;		_MOT_SwitchOffMotor
   778 ;; This function is called by:
   779 ;;		_manageSoftTimerTick
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text2
   784   000BCC                     __ptext2:
   785                           	callstack 0
   786   000BCC                     _MOT_manageMotorSoftwareTimer:
   787                           	callstack 25
   788   000BCC                     
   789                           ;source/motor.c: 70:     if ( i16uMotorSwitchDelay > 0 )
   790   000BCC  5011               	movf	_i16uMotorSwitchDelay^0,w,c
   791   000BCE  1012               	iorwf	(_i16uMotorSwitchDelay+1)^0,w,c
   792   000BD0  B4D8               	btfsc	status,2,c
   793   000BD2  EFED  F005         	goto	u11
   794   000BD6  EFEF  F005         	goto	u10
   795   000BDA                     u11:
   796   000BDA  EFFE  F005         	goto	l440
   797   000BDE                     u10:
   798   000BDE  968A               	bcf	138,3,c	;volatile
   799   000BE0                     
   800                           ;source/motor.c: 73:         i16uMotorSwitchDelay--;
   801   000BE0  0611               	decf	_i16uMotorSwitchDelay^0,f,c
   802   000BE2  A0D8               	btfss	status,0,c
   803   000BE4  0612               	decf	(_i16uMotorSwitchDelay+1)^0,f,c
   804   000BE6                     
   805                           ;source/motor.c: 74:         if ( i16uMotorSwitchDelay == 0 )
   806   000BE6  5011               	movf	_i16uMotorSwitchDelay^0,w,c
   807   000BE8  1012               	iorwf	(_i16uMotorSwitchDelay+1)^0,w,c
   808   000BEA  A4D8               	btfss	status,2,c
   809   000BEC  EFFA  F005         	goto	u21
   810   000BF0  EFFC  F005         	goto	u20
   811   000BF4                     u21:
   812   000BF4  EFFE  F005         	goto	l440
   813   000BF8                     u20:
   814   000BF8                     
   815                           ;source/motor.c: 75:         {;source/motor.c: 77:             MOT_SwitchOffMotor();
   816   000BF8  EC66  F006         	call	_MOT_SwitchOffMotor	;wreg free
   817   000BFC                     l440:
   818   000BFC  0012               	return		;funcret
   819   000BFE                     __end_of_MOT_manageMotorSoftwareTimer:
   820                           	callstack 0
   821                           
   822 ;; *************** function _MOT_SwitchOffMotor *****************
   823 ;; Defined at:
   824 ;;		line 54 in file "source/motor.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   838 ;;      Params:         0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 3
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;;		_MOT_manageMotorSoftwareTimer
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text3
   854   000CCC                     __ptext3:
   855                           	callstack 0
   856   000CCC                     _MOT_SwitchOffMotor:
   857                           	callstack 25
   858   000CCC                     
   859                           ;source/motor.c: 56:     i16uMotorSwitchDelay = 0;
   860   000CCC  0E00               	movlw	0
   861   000CCE  6E12               	movwf	(_i16uMotorSwitchDelay+1)^0,c
   862   000CD0  0E00               	movlw	0
   863   000CD2  6E11               	movwf	_i16uMotorSwitchDelay^0,c
   864   000CD4  868A               	bsf	138,3,c	;volatile
   865   000CD6  0012               	return		;funcret
   866   000CD8                     __end_of_MOT_SwitchOffMotor:
   867                           	callstack 0
   868                           
   869 ;; *************** function _getAdcFiltered *****************
   870 ;; Defined at:
   871 ;;		line 265 in file "source/main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  i16uAdcUnfil    2    2[COMRAM] unsigned short 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  i16uAdcfilte    2    6[COMRAM] unsigned short 
   876 ;;  i               1    8[COMRAM] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2    2[COMRAM] unsigned short 
   879 ;; Registers used:
   880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   886 ;;      Params:         2       0       0       0       0       0       0
   887 ;;      Locals:         3       0       0       0       0       0       0
   888 ;;      Temps:          2       0       0       0       0       0       0
   889 ;;      Totals:         7       0       0       0       0       0       0
   890 ;;Total ram usage:        7 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 3
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text4
   901   0009D8                     __ptext4:
   902                           	callstack 0
   903   0009D8                     _getAdcFiltered:
   904                           	callstack 27
   905   0009D8                     
   906                           ;source/main.c: 269:     uint8_t i = 0;
   907   0009D8  0E00               	movlw	0
   908   0009DA  6E2D               	movwf	getAdcFiltered@i^0,c
   909   0009DC                     
   910                           ;source/main.c: 272:     ti16uLuminosityAdcHistory[i8uHistoryIndex] = i16uAdcUnfiltered;
   911   0009DC  501F               	movf	getAdcFiltered@i8uHistoryIndex^0,w,c
   912   0009DE  0D02               	mullw	2
   913   0009E0  50F3               	movf	243,w,c
   914   0009E2  0F01               	addlw	low _ti16uLuminosityAdcHistory
   915   0009E4  6ED9               	movwf	fsr2l,c
   916   0009E6  6ADA               	clrf	fsr2h,c
   917   0009E8  C027  FFDE         	movff	getAdcFiltered@i16uAdcUnfiltered,postinc2
   918   0009EC  C028  FFDD         	movff	getAdcFiltered@i16uAdcUnfiltered+1,postdec2
   919   0009F0                     
   920                           ;source/main.c: 275:     if( i8uHistoryIndex < (uint8_t)(8 -1) )
   921   0009F0  0E07               	movlw	7
   922   0009F2  601F               	cpfslt	getAdcFiltered@i8uHistoryIndex^0,c
   923   0009F4  EFFE  F004         	goto	u451
   924   0009F8  EF00  F005         	goto	u450
   925   0009FC                     u451:
   926   0009FC  EF03  F005         	goto	l1554
   927   000A00                     u450:
   928   000A00                     
   929                           ;source/main.c: 276:     {;source/main.c: 277:         i8uHistoryIndex++;
   930   000A00  2A1F               	incf	getAdcFiltered@i8uHistoryIndex^0,f,c
   931                           
   932                           ;source/main.c: 278:     }
   933   000A02  EF05  F005         	goto	l356
   934   000A06                     l1554:
   935                           
   936                           ;source/main.c: 280:     {;source/main.c: 281:         i8uHistoryIndex = 0;
   937   000A06  0E00               	movlw	0
   938   000A08  6E1F               	movwf	getAdcFiltered@i8uHistoryIndex^0,c
   939   000A0A                     l356:
   940                           
   941                           ;source/main.c: 285:     i16uAdcfiltered = 0;
   942   000A0A  0E00               	movlw	0
   943   000A0C  6E2C               	movwf	(getAdcFiltered@i16uAdcfiltered+1)^0,c
   944   000A0E  0E00               	movlw	0
   945   000A10  6E2B               	movwf	getAdcFiltered@i16uAdcfiltered^0,c
   946                           
   947                           ;source/main.c: 286:     for(i=0; i<8 ; i++)
   948   000A12  0E00               	movlw	0
   949   000A14  6E2D               	movwf	getAdcFiltered@i^0,c
   950   000A16                     l1560:
   951                           
   952                           ;source/main.c: 287:     {;source/main.c: 288:       i16uAdcfiltered += ti16uLuminosityA
      +                          dcHistory[i];
   953   000A16  502D               	movf	getAdcFiltered@i^0,w,c
   954   000A18  0D02               	mullw	2
   955   000A1A  50F3               	movf	243,w,c
   956   000A1C  0F01               	addlw	low _ti16uLuminosityAdcHistory
   957   000A1E  6ED9               	movwf	fsr2l,c
   958   000A20  6ADA               	clrf	fsr2h,c
   959   000A22  50DE               	movf	postinc2,w,c
   960   000A24  262B               	addwf	getAdcFiltered@i16uAdcfiltered^0,f,c
   961   000A26  50DD               	movf	postdec2,w,c
   962   000A28  222C               	addwfc	(getAdcFiltered@i16uAdcfiltered+1)^0,f,c
   963   000A2A                     
   964                           ;source/main.c: 289:     }
   965   000A2A  2A2D               	incf	getAdcFiltered@i^0,f,c
   966   000A2C  0E07               	movlw	7
   967   000A2E  642D               	cpfsgt	getAdcFiltered@i^0,c
   968   000A30  EF1C  F005         	goto	u461
   969   000A34  EF1E  F005         	goto	u460
   970   000A38                     u461:
   971   000A38  EF0B  F005         	goto	l1560
   972   000A3C                     u460:
   973   000A3C                     
   974                           ;source/main.c: 290:     i16uAdcfiltered = (uint16_t)(i16uAdcfiltered >> 3);
   975   000A3C  C02B  F029         	movff	getAdcFiltered@i16uAdcfiltered,??_getAdcFiltered
   976   000A40  C02C  F02A         	movff	getAdcFiltered@i16uAdcfiltered+1,??_getAdcFiltered+1
   977   000A44  90D8               	bcf	status,0,c
   978   000A46  322A               	rrcf	(??_getAdcFiltered+1)^0,f,c
   979   000A48  3229               	rrcf	??_getAdcFiltered^0,f,c
   980   000A4A  90D8               	bcf	status,0,c
   981   000A4C  322A               	rrcf	(??_getAdcFiltered+1)^0,f,c
   982   000A4E  3229               	rrcf	??_getAdcFiltered^0,f,c
   983   000A50  90D8               	bcf	status,0,c
   984   000A52  322A               	rrcf	(??_getAdcFiltered+1)^0,f,c
   985   000A54  3229               	rrcf	??_getAdcFiltered^0,f,c
   986   000A56  C029  F02B         	movff	??_getAdcFiltered,getAdcFiltered@i16uAdcfiltered
   987   000A5A  C02A  F02C         	movff	??_getAdcFiltered+1,getAdcFiltered@i16uAdcfiltered+1
   988   000A5E                     
   989                           ;source/main.c: 292:     return i16uAdcfiltered;
   990   000A5E  C02B  F027         	movff	getAdcFiltered@i16uAdcfiltered,?_getAdcFiltered
   991   000A62  C02C  F028         	movff	getAdcFiltered@i16uAdcfiltered+1,?_getAdcFiltered+1
   992   000A66  0012               	return		;funcret
   993   000A68                     __end_of_getAdcFiltered:
   994                           	callstack 0
   995                           
   996 ;; *************** function _detectSunSet *****************
   997 ;; Defined at:
   998 ;;		line 340 in file "source/main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  bReturnVal      1    2[COMRAM] _Bool 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      _Bool 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         1       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         1       0       0       0       0       0       0
  1016 ;;Total ram usage:        1 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 3
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text5
  1027   000AC6                     __ptext5:
  1028                           	callstack 0
  1029   000AC6                     _detectSunSet:
  1030                           	callstack 27
  1031   000AC6                     
  1032                           ;source/main.c: 342:     _Bool bReturnVal = 0;
  1033   000AC6  0E00               	movlw	0
  1034   000AC8  6E27               	movwf	detectSunSet@bReturnVal^0,c
  1035   000ACA                     
  1036                           ;source/main.c: 345:     if ( eDoorPosition != DOOR_POSITION_CLOSE)
  1037   000ACA  0423               	decf	_eDoorPosition^0,w,c
  1038   000ACC  B4D8               	btfsc	status,2,c
  1039   000ACE  EF6B  F005         	goto	u121
  1040   000AD2  EF6D  F005         	goto	u120
  1041   000AD6                     u121:
  1042   000AD6  EF8B  F005         	goto	l1288
  1043   000ADA                     u120:
  1044   000ADA                     
  1045                           ;source/main.c: 346:     {;source/main.c: 348:         if ( i16uLuminosityAdcFiltered < 
      +                          499 )
  1046   000ADA  0EF3               	movlw	243
  1047   000ADC  5C19               	subwf	_i16uLuminosityAdcFiltered^0,w,c
  1048   000ADE  0E01               	movlw	1
  1049   000AE0  581A               	subwfb	(_i16uLuminosityAdcFiltered+1)^0,w,c
  1050   000AE2  B0D8               	btfsc	status,0,c
  1051   000AE4  EF76  F005         	goto	u131
  1052   000AE8  EF78  F005         	goto	u130
  1053   000AEC                     u131:
  1054   000AEC  EF8B  F005         	goto	l1288
  1055   000AF0                     u130:
  1056   000AF0                     
  1057                           ;source/main.c: 349:         {;source/main.c: 351:             if ( i16uCntLuminosityLow
      +                           < (2*60000/10) )
  1058   000AF0  0EE0               	movlw	224
  1059   000AF2  5C17               	subwf	_i16uCntLuminosityLow^0,w,c
  1060   000AF4  0E2E               	movlw	46
  1061   000AF6  5818               	subwfb	(_i16uCntLuminosityLow+1)^0,w,c
  1062   000AF8  B0D8               	btfsc	status,0,c
  1063   000AFA  EF81  F005         	goto	u141
  1064   000AFE  EF83  F005         	goto	u140
  1065   000B02                     u141:
  1066   000B02  EF87  F005         	goto	l1286
  1067   000B06                     u140:
  1068   000B06                     
  1069                           ;source/main.c: 352:             {;source/main.c: 353:                 i16uCntLuminosity
      +                          Low++;
  1070   000B06  4A17               	infsnz	_i16uCntLuminosityLow^0,f,c
  1071   000B08  2A18               	incf	(_i16uCntLuminosityLow+1)^0,f,c
  1072                           
  1073                           ;source/main.c: 354:             }
  1074   000B0A  EF8F  F005         	goto	l376
  1075   000B0E                     l1286:
  1076                           
  1077                           ;source/main.c: 356:             {;source/main.c: 358:                 bReturnVal = 1;
  1078   000B0E  0E01               	movlw	1
  1079   000B10  6E27               	movwf	detectSunSet@bReturnVal^0,c
  1080   000B12  EF8F  F005         	goto	l376
  1081   000B16                     l1288:
  1082                           
  1083                           ;source/main.c: 362:         {;source/main.c: 363:             i16uCntLuminosityLow = 0;
  1084   000B16  0E00               	movlw	0
  1085   000B18  6E18               	movwf	(_i16uCntLuminosityLow+1)^0,c
  1086   000B1A  0E00               	movlw	0
  1087   000B1C  6E17               	movwf	_i16uCntLuminosityLow^0,c
  1088   000B1E                     l376:
  1089                           
  1090                           ;source/main.c: 370:  return bReturnVal;
  1091   000B1E  5027               	movf	detectSunSet@bReturnVal^0,w,c
  1092   000B20  0012               	return		;funcret
  1093   000B22                     __end_of_detectSunSet:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _detectSunRise *****************
  1097 ;; Defined at:
  1098 ;;		line 301 in file "source/main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  bReturnVal      1    2[COMRAM] _Bool 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      _Bool 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         1       0       0       0       0       0       0
  1116 ;;Total ram usage:        1 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 3
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text6
  1127   000A68                     __ptext6:
  1128                           	callstack 0
  1129   000A68                     _detectSunRise:
  1130                           	callstack 27
  1131   000A68                     
  1132                           ;source/main.c: 303:  _Bool bReturnVal = 0;
  1133   000A68  0E00               	movlw	0
  1134   000A6A  6E27               	movwf	detectSunRise@bReturnVal^0,c
  1135   000A6C                     
  1136                           ;source/main.c: 306:     if ( eDoorPosition != DOOR_POSITION_OPEN)
  1137   000A6C  0E02               	movlw	2
  1138   000A6E  1823               	xorwf	_eDoorPosition^0,w,c
  1139   000A70  B4D8               	btfsc	status,2,c
  1140   000A72  EF3D  F005         	goto	u81
  1141   000A76  EF3F  F005         	goto	u80
  1142   000A7A                     u81:
  1143   000A7A  EF5D  F005         	goto	l1238
  1144   000A7E                     u80:
  1145   000A7E                     
  1146                           ;source/main.c: 307:     {;source/main.c: 309:         if ( i16uLuminosityAdcFiltered > 
      +                          550 )
  1147   000A7E  0E27               	movlw	39
  1148   000A80  5C19               	subwf	_i16uLuminosityAdcFiltered^0,w,c
  1149   000A82  0E02               	movlw	2
  1150   000A84  581A               	subwfb	(_i16uLuminosityAdcFiltered+1)^0,w,c
  1151   000A86  A0D8               	btfss	status,0,c
  1152   000A88  EF48  F005         	goto	u91
  1153   000A8C  EF4A  F005         	goto	u90
  1154   000A90                     u91:
  1155   000A90  EF5D  F005         	goto	l1238
  1156   000A94                     u90:
  1157   000A94                     
  1158                           ;source/main.c: 310:         {;source/main.c: 312:             if ( i16uCntLuminosityHig
      +                          h < (2*60000/10) )
  1159   000A94  0EE0               	movlw	224
  1160   000A96  5C15               	subwf	_i16uCntLuminosityHigh^0,w,c
  1161   000A98  0E2E               	movlw	46
  1162   000A9A  5816               	subwfb	(_i16uCntLuminosityHigh+1)^0,w,c
  1163   000A9C  B0D8               	btfsc	status,0,c
  1164   000A9E  EF53  F005         	goto	u101
  1165   000AA2  EF55  F005         	goto	u100
  1166   000AA6                     u101:
  1167   000AA6  EF59  F005         	goto	l1236
  1168   000AAA                     u100:
  1169   000AAA                     
  1170                           ;source/main.c: 313:             {;source/main.c: 314:                 i16uCntLuminosity
      +                          High++;
  1171   000AAA  4A15               	infsnz	_i16uCntLuminosityHigh^0,f,c
  1172   000AAC  2A16               	incf	(_i16uCntLuminosityHigh+1)^0,f,c
  1173                           
  1174                           ;source/main.c: 315:             }
  1175   000AAE  EF61  F005         	goto	l367
  1176   000AB2                     l1236:
  1177                           
  1178                           ;source/main.c: 317:             {;source/main.c: 319:                 bReturnVal = 1;
  1179   000AB2  0E01               	movlw	1
  1180   000AB4  6E27               	movwf	detectSunRise@bReturnVal^0,c
  1181   000AB6  EF61  F005         	goto	l367
  1182   000ABA                     l1238:
  1183                           
  1184                           ;source/main.c: 323:         {;source/main.c: 324:             i16uCntLuminosityHigh = 0
      +                          ;
  1185   000ABA  0E00               	movlw	0
  1186   000ABC  6E16               	movwf	(_i16uCntLuminosityHigh+1)^0,c
  1187   000ABE  0E00               	movlw	0
  1188   000AC0  6E15               	movwf	_i16uCntLuminosityHigh^0,c
  1189   000AC2                     l367:
  1190                           
  1191                           ;source/main.c: 331:         return bReturnVal;
  1192   000AC2  5027               	movf	detectSunRise@bReturnVal^0,w,c
  1193   000AC4  0012               	return		;funcret
  1194   000AC6                     __end_of_detectSunRise:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function ___aldiv *****************
  1198 ;; Defined at:
  1199 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  dividend        4    2[COMRAM] long 
  1202 ;;  divisor         4    6[COMRAM] long 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  quotient        4   12[COMRAM] long 
  1205 ;;  sign            1   11[COMRAM] unsigned char 
  1206 ;;  counter         1   10[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  4    2[COMRAM] long 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1216 ;;      Params:         8       0       0       0       0       0       0
  1217 ;;      Locals:         6       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0
  1219 ;;      Totals:        14       0       0       0       0       0       0
  1220 ;;Total ram usage:       14 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 3
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text7
  1231   00081E                     __ptext7:
  1232                           	callstack 0
  1233   00081E                     ___aldiv:
  1234                           	callstack 27
  1235   00081E  0E00               	movlw	0
  1236   000820  6E30               	movwf	___aldiv@sign^0,c
  1237   000822  BE2E               	btfsc	(___aldiv@divisor+3)^0,7,c
  1238   000824  EF18  F004         	goto	u480
  1239   000828  EF16  F004         	goto	u481
  1240   00082C                     u481:
  1241   00082C  EF22  F004         	goto	l1608
  1242   000830                     u480:
  1243   000830  1E2E               	comf	(___aldiv@divisor+3)^0,f,c
  1244   000832  1E2D               	comf	(___aldiv@divisor+2)^0,f,c
  1245   000834  1E2C               	comf	(___aldiv@divisor+1)^0,f,c
  1246   000836  6C2B               	negf	___aldiv@divisor^0,c
  1247   000838  0E00               	movlw	0
  1248   00083A  222C               	addwfc	(___aldiv@divisor+1)^0,f,c
  1249   00083C  222D               	addwfc	(___aldiv@divisor+2)^0,f,c
  1250   00083E  222E               	addwfc	(___aldiv@divisor+3)^0,f,c
  1251   000840  0E01               	movlw	1
  1252   000842  6E30               	movwf	___aldiv@sign^0,c
  1253   000844                     l1608:
  1254   000844  BE2A               	btfsc	(___aldiv@dividend+3)^0,7,c
  1255   000846  EF29  F004         	goto	u490
  1256   00084A  EF27  F004         	goto	u491
  1257   00084E                     u491:
  1258   00084E  EF33  F004         	goto	l1614
  1259   000852                     u490:
  1260   000852  1E2A               	comf	(___aldiv@dividend+3)^0,f,c
  1261   000854  1E29               	comf	(___aldiv@dividend+2)^0,f,c
  1262   000856  1E28               	comf	(___aldiv@dividend+1)^0,f,c
  1263   000858  6C27               	negf	___aldiv@dividend^0,c
  1264   00085A  0E00               	movlw	0
  1265   00085C  2228               	addwfc	(___aldiv@dividend+1)^0,f,c
  1266   00085E  2229               	addwfc	(___aldiv@dividend+2)^0,f,c
  1267   000860  222A               	addwfc	(___aldiv@dividend+3)^0,f,c
  1268   000862  0E01               	movlw	1
  1269   000864  1A30               	xorwf	___aldiv@sign^0,f,c
  1270   000866                     l1614:
  1271   000866  0E00               	movlw	0
  1272   000868  6E31               	movwf	___aldiv@quotient^0,c
  1273   00086A  0E00               	movlw	0
  1274   00086C  6E32               	movwf	(___aldiv@quotient+1)^0,c
  1275   00086E  0E00               	movlw	0
  1276   000870  6E33               	movwf	(___aldiv@quotient+2)^0,c
  1277   000872  0E00               	movlw	0
  1278   000874  6E34               	movwf	(___aldiv@quotient+3)^0,c
  1279   000876  502B               	movf	___aldiv@divisor^0,w,c
  1280   000878  102C               	iorwf	(___aldiv@divisor+1)^0,w,c
  1281   00087A  102D               	iorwf	(___aldiv@divisor+2)^0,w,c
  1282   00087C  102E               	iorwf	(___aldiv@divisor+3)^0,w,c
  1283   00087E  B4D8               	btfsc	status,2,c
  1284   000880  EF44  F004         	goto	u501
  1285   000884  EF46  F004         	goto	u500
  1286   000888                     u501:
  1287   000888  EF7C  F004         	goto	l1636
  1288   00088C                     u500:
  1289   00088C  0E01               	movlw	1
  1290   00088E  6E2F               	movwf	___aldiv@counter^0,c
  1291   000890  EF50  F004         	goto	l1622
  1292   000894                     l1620:
  1293   000894  90D8               	bcf	status,0,c
  1294   000896  362B               	rlcf	___aldiv@divisor^0,f,c
  1295   000898  362C               	rlcf	(___aldiv@divisor+1)^0,f,c
  1296   00089A  362D               	rlcf	(___aldiv@divisor+2)^0,f,c
  1297   00089C  362E               	rlcf	(___aldiv@divisor+3)^0,f,c
  1298   00089E  2A2F               	incf	___aldiv@counter^0,f,c
  1299   0008A0                     l1622:
  1300   0008A0  AE2E               	btfss	(___aldiv@divisor+3)^0,7,c
  1301   0008A2  EF55  F004         	goto	u511
  1302   0008A6  EF57  F004         	goto	u510
  1303   0008AA                     u511:
  1304   0008AA  EF4A  F004         	goto	l1620
  1305   0008AE                     u510:
  1306   0008AE                     l1624:
  1307   0008AE  90D8               	bcf	status,0,c
  1308   0008B0  3631               	rlcf	___aldiv@quotient^0,f,c
  1309   0008B2  3632               	rlcf	(___aldiv@quotient+1)^0,f,c
  1310   0008B4  3633               	rlcf	(___aldiv@quotient+2)^0,f,c
  1311   0008B6  3634               	rlcf	(___aldiv@quotient+3)^0,f,c
  1312   0008B8  502B               	movf	___aldiv@divisor^0,w,c
  1313   0008BA  5C27               	subwf	___aldiv@dividend^0,w,c
  1314   0008BC  502C               	movf	(___aldiv@divisor+1)^0,w,c
  1315   0008BE  5828               	subwfb	(___aldiv@dividend+1)^0,w,c
  1316   0008C0  502D               	movf	(___aldiv@divisor+2)^0,w,c
  1317   0008C2  5829               	subwfb	(___aldiv@dividend+2)^0,w,c
  1318   0008C4  502E               	movf	(___aldiv@divisor+3)^0,w,c
  1319   0008C6  582A               	subwfb	(___aldiv@dividend+3)^0,w,c
  1320   0008C8  A0D8               	btfss	status,0,c
  1321   0008CA  EF69  F004         	goto	u521
  1322   0008CE  EF6B  F004         	goto	u520
  1323   0008D2                     u521:
  1324   0008D2  EF74  F004         	goto	l1632
  1325   0008D6                     u520:
  1326   0008D6  502B               	movf	___aldiv@divisor^0,w,c
  1327   0008D8  5E27               	subwf	___aldiv@dividend^0,f,c
  1328   0008DA  502C               	movf	(___aldiv@divisor+1)^0,w,c
  1329   0008DC  5A28               	subwfb	(___aldiv@dividend+1)^0,f,c
  1330   0008DE  502D               	movf	(___aldiv@divisor+2)^0,w,c
  1331   0008E0  5A29               	subwfb	(___aldiv@dividend+2)^0,f,c
  1332   0008E2  502E               	movf	(___aldiv@divisor+3)^0,w,c
  1333   0008E4  5A2A               	subwfb	(___aldiv@dividend+3)^0,f,c
  1334   0008E6  8031               	bsf	___aldiv@quotient^0,0,c
  1335   0008E8                     l1632:
  1336   0008E8  90D8               	bcf	status,0,c
  1337   0008EA  322E               	rrcf	(___aldiv@divisor+3)^0,f,c
  1338   0008EC  322D               	rrcf	(___aldiv@divisor+2)^0,f,c
  1339   0008EE  322C               	rrcf	(___aldiv@divisor+1)^0,f,c
  1340   0008F0  322B               	rrcf	___aldiv@divisor^0,f,c
  1341   0008F2  2E2F               	decfsz	___aldiv@counter^0,f,c
  1342   0008F4  EF57  F004         	goto	l1624
  1343   0008F8                     l1636:
  1344   0008F8  5030               	movf	___aldiv@sign^0,w,c
  1345   0008FA  B4D8               	btfsc	status,2,c
  1346   0008FC  EF82  F004         	goto	u531
  1347   000900  EF84  F004         	goto	u530
  1348   000904                     u531:
  1349   000904  EF8C  F004         	goto	l1640
  1350   000908                     u530:
  1351   000908  1E34               	comf	(___aldiv@quotient+3)^0,f,c
  1352   00090A  1E33               	comf	(___aldiv@quotient+2)^0,f,c
  1353   00090C  1E32               	comf	(___aldiv@quotient+1)^0,f,c
  1354   00090E  6C31               	negf	___aldiv@quotient^0,c
  1355   000910  0E00               	movlw	0
  1356   000912  2232               	addwfc	(___aldiv@quotient+1)^0,f,c
  1357   000914  2233               	addwfc	(___aldiv@quotient+2)^0,f,c
  1358   000916  2234               	addwfc	(___aldiv@quotient+3)^0,f,c
  1359   000918                     l1640:
  1360   000918  C031  F027         	movff	___aldiv@quotient,?___aldiv
  1361   00091C  C032  F028         	movff	___aldiv@quotient+1,?___aldiv+1
  1362   000920  C033  F029         	movff	___aldiv@quotient+2,?___aldiv+2
  1363   000924  C034  F02A         	movff	___aldiv@quotient+3,?___aldiv+3
  1364   000928  0012               	return		;funcret
  1365   00092A                     __end_of___aldiv:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  1369 ;; Defined at:
  1370 ;;		line 141 in file "source/driver/timer/src/tmr0.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  CallbackHand    2    2[COMRAM] PTR FTN()void 
  1373 ;;		 -> Timer0_OverflowCallback@main$F694(1), 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1385 ;;      Params:         2       0       0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 3
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text8
  1400   000CD8                     __ptext8:
  1401                           	callstack 0
  1402   000CD8                     _Timer0_OverflowCallbackRegister:
  1403                           	callstack 27
  1404   000CD8                     
  1405                           ;source/driver/timer/src/tmr0.c: 141: void Timer0_OverflowCallbackRegister(void (*Callba
      +                          ckHandler)(void));source/driver/timer/src/tmr0.c: 142: {;source/driver/timer/src/tmr0.c:
      +                           143:     Timer0_OverflowCallback = CallbackHandler;
  1406   000CD8  C027  F039         	movff	Timer0_OverflowCallbackRegister@CallbackHandler,_Timer0_OverflowCallback
  1407   000CDC  C028  F03A         	movff	Timer0_OverflowCallbackRegister@CallbackHandler+1,_Timer0_OverflowCallback+1
  1408   000CE0  0012               	return		;funcret
  1409   000CE2                     __end_of_Timer0_OverflowCallbackRegister:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _SYSTEM_Initialize *****************
  1413 ;; Defined at:
  1414 ;;		line 37 in file "source/driver/system/src/system.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1428 ;;      Params:         0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 5
  1435 ;; This function calls:
  1436 ;;		_ADC_Initialize
  1437 ;;		_CLOCK_Initialize
  1438 ;;		_INTERRUPT_Initialize
  1439 ;;		_PIN_MANAGER_Initialize
  1440 ;;		_Timer0_Initialize
  1441 ;;		_WDT_Initialize
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text9
  1448   000C80                     __ptext9:
  1449                           	callstack 0
  1450   000C80                     _SYSTEM_Initialize:
  1451                           	callstack 25
  1452   000C80                     
  1453                           ;source/driver/system/src/system.c: 39:     CLOCK_Initialize();
  1454   000C80  EC80  F006         	call	_CLOCK_Initialize	;wreg free
  1455                           
  1456                           ;source/driver/system/src/system.c: 40:     PIN_MANAGER_Initialize();
  1457   000C84  EC4D  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1458                           
  1459                           ;source/driver/system/src/system.c: 41:     ADC_Initialize();
  1460   000C88  EC5A  F006         	call	_ADC_Initialize	;wreg free
  1461                           
  1462                           ;source/driver/system/src/system.c: 42:     Timer0_Initialize();
  1463   000C8C  EC13  F006         	call	_Timer0_Initialize	;wreg free
  1464                           
  1465                           ;source/driver/system/src/system.c: 43:     WDT_Initialize();
  1466   000C90  EC88  F006         	call	_WDT_Initialize	;wreg free
  1467   000C94                     
  1468                           ;source/driver/system/src/system.c: 44:     INTERRUPT_Initialize();
  1469   000C94  ECCC  F005         	call	_INTERRUPT_Initialize	;wreg free
  1470   000C98  0012               	return		;funcret
  1471   000C9A                     __end_of_SYSTEM_Initialize:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _WDT_Initialize *****************
  1475 ;; Defined at:
  1476 ;;		line 36 in file "source/driver/system/src/watchdog.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 3
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_SYSTEM_Initialize
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505   000D10                     __ptext10:
  1506                           	callstack 0
  1507   000D10                     _WDT_Initialize:
  1508                           	callstack 26
  1509   000D10                     
  1510                           ;source/driver/system/src/watchdog.c: 39:     WDTCON = 0x1;
  1511   000D10  0E01               	movlw	1
  1512   000D12  6ED1               	movwf	209,c	;volatile
  1513   000D14  0012               	return		;funcret
  1514   000D16                     __end_of_WDT_Initialize:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _Timer0_Initialize *****************
  1518 ;; Defined at:
  1519 ;;		line 50 in file "source/driver/timer/src/tmr0.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         0       0       0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0
  1535 ;;      Temps:          2       0       0       0       0       0       0
  1536 ;;      Totals:         2       0       0       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 3
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_SYSTEM_Initialize
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text11
  1548   000C26                     __ptext11:
  1549                           	callstack 0
  1550   000C26                     _Timer0_Initialize:
  1551                           	callstack 26
  1552   000C26                     
  1553                           ;source/driver/timer/src/tmr0.c: 56:     T0CONbits.T08BIT = 0;
  1554   000C26  9CD5               	bcf	213,6,c	;volatile
  1555   000C28                     
  1556                           ;source/driver/timer/src/tmr0.c: 59:     TMR0H = 0xF6;
  1557   000C28  0EF6               	movlw	246
  1558   000C2A  6ED7               	movwf	215,c	;volatile
  1559                           
  1560                           ;source/driver/timer/src/tmr0.c: 62:     TMR0L = 0x3C;
  1561   000C2C  0E3C               	movlw	60
  1562   000C2E  6ED6               	movwf	214,c	;volatile
  1563                           
  1564                           ;source/driver/timer/src/tmr0.c: 65:     timer0ReloadVal = ((uint16_t)TMR0H << 8) | TMR0
      +                          L;
  1565   000C30  50D7               	movf	215,w,c	;volatile
  1566   000C32  6E27               	movwf	??_Timer0_Initialize^0,c
  1567   000C34  50D6               	movf	214,w,c	;volatile
  1568   000C36  6E1D               	movwf	_timer0ReloadVal^0,c	;volatile
  1569   000C38  C027  F01E         	movff	??_Timer0_Initialize,_timer0ReloadVal+1	;volatile
  1570   000C3C                     
  1571                           ;source/driver/timer/src/tmr0.c: 68:     INTCONbits.TMR0IF = 0;
  1572   000C3C  94F2               	bcf	242,2,c	;volatile
  1573   000C3E                     
  1574                           ;source/driver/timer/src/tmr0.c: 71:     INTCONbits.TMR0IE = 1;
  1575   000C3E  8AF2               	bsf	242,5,c	;volatile
  1576                           
  1577                           ;source/driver/timer/src/tmr0.c: 74:     T0CON = 0x98;
  1578   000C40  0E98               	movlw	152
  1579   000C42  6ED5               	movwf	213,c	;volatile
  1580   000C44  0012               	return		;funcret
  1581   000C46                     __end_of_Timer0_Initialize:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _PIN_MANAGER_Initialize *****************
  1585 ;; Defined at:
  1586 ;;		line 38 in file "source/driver/system/src/pins.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1600 ;;      Params:         0       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 4
  1607 ;; This function calls:
  1608 ;;		_PIN_MANAGER_RefreshConfig
  1609 ;; This function is called by:
  1610 ;;		_SYSTEM_Initialize
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text12
  1615   000C9A                     __ptext12:
  1616                           	callstack 0
  1617   000C9A                     _PIN_MANAGER_Initialize:
  1618                           	callstack 25
  1619   000C9A                     
  1620                           ;source/driver/system/src/pins.c: 43:     LATA = 0x0;
  1621   000C9A  0E00               	movlw	0
  1622   000C9C  6E89               	movwf	137,c	;volatile
  1623                           
  1624                           ;source/driver/system/src/pins.c: 44:     LATB = 0x0;
  1625   000C9E  0E00               	movlw	0
  1626   000CA0  6E8A               	movwf	138,c	;volatile
  1627                           
  1628                           ;source/driver/system/src/pins.c: 45:     LATC = 0x0;
  1629   000CA2  0E00               	movlw	0
  1630   000CA4  6E8B               	movwf	139,c	;volatile
  1631                           
  1632                           ;source/driver/system/src/pins.c: 46:     LATD = 0x0;
  1633   000CA6  0E00               	movlw	0
  1634   000CA8  6E8C               	movwf	140,c	;volatile
  1635                           
  1636                           ;source/driver/system/src/pins.c: 47:     LATE = 0x0;
  1637   000CAA  0E00               	movlw	0
  1638   000CAC  6E8D               	movwf	141,c	;volatile
  1639   000CAE                     
  1640                           ;source/driver/system/src/pins.c: 49:     PIN_MANAGER_RefreshConfig();
  1641   000CAE  ECFF  F005         	call	_PIN_MANAGER_RefreshConfig	;wreg free
  1642   000CB2  0012               	return		;funcret
  1643   000CB4                     __end_of_PIN_MANAGER_Initialize:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _PIN_MANAGER_RefreshConfig *****************
  1647 ;; Defined at:
  1648 ;;		line 52 in file "source/driver/system/src/pins.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         0       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 3
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_PIN_MANAGER_Initialize
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text13
  1678   000BFE                     __ptext13:
  1679                           	callstack 0
  1680   000BFE                     _PIN_MANAGER_RefreshConfig:
  1681                           	callstack 25
  1682   000BFE                     
  1683                           ;source/driver/system/src/pins.c: 64:     TRISA = 0b00000011;
  1684   000BFE  0E03               	movlw	3
  1685   000C00  6E92               	movwf	146,c	;volatile
  1686                           
  1687                           ;source/driver/system/src/pins.c: 65:     TRISB = 0b00000111;
  1688   000C02  0E07               	movlw	7
  1689   000C04  6E93               	movwf	147,c	;volatile
  1690                           
  1691                           ;source/driver/system/src/pins.c: 66:     TRISC = 0x0;
  1692   000C06  0E00               	movlw	0
  1693   000C08  6E94               	movwf	148,c	;volatile
  1694                           
  1695                           ;source/driver/system/src/pins.c: 67:     TRISD = 0x0;
  1696   000C0A  0E00               	movlw	0
  1697   000C0C  6E95               	movwf	149,c	;volatile
  1698                           
  1699                           ;source/driver/system/src/pins.c: 68:     TRISE = 0x0;
  1700   000C0E  0E00               	movlw	0
  1701   000C10  6E96               	movwf	150,c	;volatile
  1702                           
  1703                           ;source/driver/system/src/pins.c: 87:     ANSEL = 0x03;
  1704   000C12  0E03               	movlw	3
  1705   000C14  6E7E               	movwf	126,c	;volatile
  1706                           
  1707                           ;source/driver/system/src/pins.c: 88:     ANSELH = 0x00;
  1708   000C16  0E00               	movlw	0
  1709   000C18  6E7F               	movwf	127,c	;volatile
  1710                           
  1711                           ;source/driver/system/src/pins.c: 94:     WPUB = 0x00;
  1712   000C1A  0E00               	movlw	0
  1713   000C1C  6E7C               	movwf	124,c	;volatile
  1714                           
  1715                           ;source/driver/system/src/pins.c: 117:     IOCB = 0x0;
  1716   000C1E  0E00               	movlw	0
  1717   000C20  6E7D               	movwf	125,c	;volatile
  1718   000C22                     
  1719                           ;source/driver/system/src/pins.c: 124:     INTCONbits.RBIE = 0;
  1720   000C22  96F2               	bcf	242,3,c	;volatile
  1721   000C24  0012               	return		;funcret
  1722   000C26                     __end_of_PIN_MANAGER_RefreshConfig:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _INTERRUPT_Initialize *****************
  1726 ;; Defined at:
  1727 ;;		line 42 in file "source/driver/system/src/interrupt.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1741 ;;      Params:         0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 4
  1748 ;; This function calls:
  1749 ;;		_INT0_SetInterruptHandler
  1750 ;;		_INT1_SetInterruptHandler
  1751 ;;		_INT2_SetInterruptHandler
  1752 ;; This function is called by:
  1753 ;;		_SYSTEM_Initialize
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text14
  1758   000B98                     __ptext14:
  1759                           	callstack 0
  1760   000B98                     _INTERRUPT_Initialize:
  1761                           	callstack 25
  1762   000B98                     
  1763                           ;source/driver/system/src/interrupt.c: 45:     RCONbits.IPEN = 0;
  1764   000B98  9ED0               	bcf	208,7,c	;volatile
  1765                           
  1766                           ;source/driver/system/src/interrupt.c: 49:     (INTCONbits.INT0IF = 0);
  1767   000B9A  92F2               	bcf	242,1,c	;volatile
  1768                           
  1769                           ;source/driver/system/src/interrupt.c: 50:     (INTCON2bits.INTEDG0 = 1);
  1770   000B9C  8CF1               	bsf	241,6,c	;volatile
  1771   000B9E                     
  1772                           ;source/driver/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_DefaultInte
      +                          rruptHandler);
  1773   000B9E  0E00               	movlw	0
  1774   000BA0  6E27               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1775   000BA2  0E00               	movlw	0
  1776   000BA4  6E28               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1777   000BA6  EC7B  F006         	call	_INT0_SetInterruptHandler	;wreg free
  1778   000BAA                     
  1779                           ;source/driver/system/src/interrupt.c: 57:     (INTCON3bits.INT1IF = 0);
  1780   000BAA  90F0               	bcf	240,0,c	;volatile
  1781   000BAC                     
  1782                           ;source/driver/system/src/interrupt.c: 58:     (INTCON2bits.INTEDG1 = 1);
  1783   000BAC  8AF1               	bsf	241,5,c	;volatile
  1784                           
  1785                           ;source/driver/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_DefaultInte
      +                          rruptHandler);
  1786   000BAE  0E00               	movlw	0
  1787   000BB0  6E27               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1788   000BB2  0E00               	movlw	0
  1789   000BB4  6E28               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1790   000BB6  EC76  F006         	call	_INT1_SetInterruptHandler	;wreg free
  1791   000BBA                     
  1792                           ;source/driver/system/src/interrupt.c: 65:     (INTCON3bits.INT2IF = 0);
  1793   000BBA  92F0               	bcf	240,1,c	;volatile
  1794   000BBC                     
  1795                           ;source/driver/system/src/interrupt.c: 66:     (INTCON2bits.INTEDG2 = 1);
  1796   000BBC  88F1               	bsf	241,4,c	;volatile
  1797                           
  1798                           ;source/driver/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_DefaultInte
      +                          rruptHandler);
  1799   000BBE  0E00               	movlw	0
  1800   000BC0  6E27               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1801   000BC2  0E00               	movlw	0
  1802   000BC4  6E28               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1803   000BC6  EC71  F006         	call	_INT2_SetInterruptHandler	;wreg free
  1804   000BCA  0012               	return		;funcret
  1805   000BCC                     __end_of_INTERRUPT_Initialize:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _INT2_SetInterruptHandler *****************
  1809 ;; Defined at:
  1810 ;;		line 170 in file "source/driver/system/src/interrupt.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1813 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1825 ;;      Params:         2       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0
  1828 ;;      Totals:         2       0       0       0       0       0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_INTERRUPT_Initialize
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text15
  1840   000CE2                     __ptext15:
  1841                           	callstack 0
  1842   000CE2                     _INT2_SetInterruptHandler:
  1843                           	callstack 25
  1844   000CE2                     
  1845                           ;source/driver/system/src/interrupt.c: 171:     INT2_InterruptHandler = InterruptHandler
      +                          ;
  1846   000CE2  C027  F03B         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1847   000CE6  C028  F03C         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1848   000CEA  0012               	return		;funcret
  1849   000CEC                     __end_of_INT2_SetInterruptHandler:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _INT1_SetInterruptHandler *****************
  1853 ;; Defined at:
  1854 ;;		line 144 in file "source/driver/system/src/interrupt.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1857 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         2       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_INTERRUPT_Initialize
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text16
  1884   000CEC                     __ptext16:
  1885                           	callstack 0
  1886   000CEC                     _INT1_SetInterruptHandler:
  1887                           	callstack 25
  1888   000CEC                     
  1889                           ;source/driver/system/src/interrupt.c: 145:     INT1_InterruptHandler = InterruptHandler
      +                          ;
  1890   000CEC  C027  F03D         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1891   000CF0  C028  F03E         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1892   000CF4  0012               	return		;funcret
  1893   000CF6                     __end_of_INT1_SetInterruptHandler:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _INT0_SetInterruptHandler *****************
  1897 ;; Defined at:
  1898 ;;		line 118 in file "source/driver/system/src/interrupt.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1901 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         2       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         2       0       0       0       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 3
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_INTERRUPT_Initialize
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text17
  1928   000CF6                     __ptext17:
  1929                           	callstack 0
  1930   000CF6                     _INT0_SetInterruptHandler:
  1931                           	callstack 25
  1932   000CF6                     
  1933                           ;source/driver/system/src/interrupt.c: 119:     INT0_InterruptHandler = InterruptHandler
      +                          ;
  1934   000CF6  C027  F03F         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1935   000CFA  C028  F040         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1936   000CFE  0012               	return		;funcret
  1937   000D00                     __end_of_INT0_SetInterruptHandler:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _CLOCK_Initialize *****************
  1941 ;; Defined at:
  1942 ;;		line 37 in file "source/driver/system/src/clock.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1956 ;;      Params:         0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 3
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_SYSTEM_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text18
  1971   000D00                     __ptext18:
  1972                           	callstack 0
  1973   000D00                     _CLOCK_Initialize:
  1974                           	callstack 26
  1975   000D00                     
  1976                           ;source/driver/system/src/clock.c: 41:     OSCCON = 0xB2;
  1977   000D00  0EB2               	movlw	178
  1978   000D02  6ED3               	movwf	211,c	;volatile
  1979                           
  1980                           ;source/driver/system/src/clock.c: 43:     OSCTUNE = 0x0;
  1981   000D04  0E00               	movlw	0
  1982   000D06  6E9B               	movwf	155,c	;volatile
  1983   000D08  0012               	return		;funcret
  1984   000D0A                     __end_of_CLOCK_Initialize:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _ADC_Initialize *****************
  1988 ;; Defined at:
  1989 ;;		line 53 in file "source/driver/adc/src/adc.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 3
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_SYSTEM_Initialize
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text19
  2018   000CB4                     __ptext19:
  2019                           	callstack 0
  2020   000CB4                     _ADC_Initialize:
  2021                           	callstack 26
  2022   000CB4                     
  2023                           ;source/driver/adc/src/adc.c: 56:     ADCON1 = 0x0;
  2024   000CB4  0E00               	movlw	0
  2025   000CB6  6EC1               	movwf	193,c	;volatile
  2026                           
  2027                           ;source/driver/adc/src/adc.c: 59:     ADCON2 = 0xB8;
  2028   000CB8  0EB8               	movlw	184
  2029   000CBA  6EC0               	movwf	192,c	;volatile
  2030                           
  2031                           ;source/driver/adc/src/adc.c: 62:     ADRESL = 0x0;
  2032   000CBC  0E00               	movlw	0
  2033   000CBE  6EC3               	movwf	195,c	;volatile
  2034                           
  2035                           ;source/driver/adc/src/adc.c: 65:     ADRESH = 0x0;
  2036   000CC0  0E00               	movlw	0
  2037   000CC2  6EC4               	movwf	196,c	;volatile
  2038                           
  2039                           ;source/driver/adc/src/adc.c: 69:     ADCON0 = 0x3;
  2040   000CC4  0E03               	movlw	3
  2041   000CC6  6EC2               	movwf	194,c	;volatile
  2042   000CC8                     
  2043                           ;source/driver/adc/src/adc.c: 72:     PIR1bits.ADIF = 0;
  2044   000CC8  9C9E               	bcf	158,6,c	;volatile
  2045   000CCA  0012               	return		;funcret
  2046   000CCC                     __end_of_ADC_Initialize:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _RBT_simulateButtonPush *****************
  2050 ;; Defined at:
  2051 ;;		line 54 in file "source/remoteButton.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  eButtonId       1    wreg     enum E2725
  2054 ;;  i8uNbOfPush     1    2[COMRAM] unsigned char 
  2055 ;;  i16uPushDura    2    3[COMRAM] unsigned short 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  eButtonId       1    7[COMRAM] enum E2725
  2058 ;;  i               1    9[COMRAM] unsigned char 
  2059 ;;  i8uBackupLed    1    8[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         3       0       0       0       0       0       0
  2070 ;;      Locals:         3       0       0       0       0       0       0
  2071 ;;      Temps:          2       0       0       0       0       0       0
  2072 ;;      Totals:         8       0       0       0       0       0       0
  2073 ;;Total ram usage:        8 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 3
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text20
  2084   00092A                     __ptext20:
  2085                           	callstack 0
  2086   00092A                     _RBT_simulateButtonPush:
  2087                           	callstack 27
  2088                           
  2089                           ;incstack = 0
  2090                           ;RBT_simulateButtonPush@eButtonId stored from wreg
  2091   00092A  6E2C               	movwf	RBT_simulateButtonPush@eButtonId^0,c
  2092   00092C                     
  2093                           ;source/remoteButton.c: 57:     uint8_t i8uBackupLedArray = 0;
  2094   00092C  0E00               	movlw	0
  2095   00092E  6E2D               	movwf	RBT_simulateButtonPush@i8uBackupLedArray^0,c
  2096   000930                     
  2097                           ;source/remoteButton.c: 59:     i8uBackupLedArray = LATD;
  2098   000930  CF8C F02D          	movff	3980,RBT_simulateButtonPush@i8uBackupLedArray	;volatile
  2099                           
  2100                           ;source/remoteButton.c: 61:     for (i=0; i<i8uNbOfPush; i++)
  2101   000934  0E00               	movlw	0
  2102   000936  6E2E               	movwf	RBT_simulateButtonPush@i^0,c
  2103   000938  EFE0  F004         	goto	l391
  2104   00093C                     l1576:
  2105                           
  2106                           ;source/remoteButton.c: 62:     {;source/remoteButton.c: 63:         LATD = 0x00;
  2107   00093C  0E00               	movlw	0
  2108   00093E  6E8C               	movwf	140,c	;volatile
  2109                           
  2110                           ;source/remoteButton.c: 64:         switch (eButtonId)
  2111   000940  EFAA  F004         	goto	l1580
  2112   000944                     l395:
  2113   000944  928A               	bcf	138,1,c	;volatile
  2114   000946  9293               	bcf	147,1,c	;volatile
  2115   000948  EFBF  F004         	goto	l399
  2116   00094C                     l401:
  2117   00094C  948A               	bcf	138,2,c	;volatile
  2118   00094E  9493               	bcf	147,2,c	;volatile
  2119   000950  EFBF  F004         	goto	l399
  2120   000954                     l1580:
  2121   000954  502C               	movf	RBT_simulateButtonPush@eButtonId^0,w,c
  2122   000956  6E2A               	movwf	??_RBT_simulateButtonPush^0,c
  2123   000958  6A2B               	clrf	(??_RBT_simulateButtonPush+1)^0,c
  2124                           
  2125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2126                           ; Switch size 1, requested type "simple"
  2127                           ; Number of cases is 1, Range of values is 0 to 0
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte            4     3 (average)
  2131                           ;	Chosen strategy is simple_byte
  2132   00095A  502B               	movf	(??_RBT_simulateButtonPush+1)^0,w,c
  2133   00095C  0A00               	xorlw	0	; case 0
  2134   00095E  B4D8               	btfsc	status,2,c
  2135   000960  EFB4  F004         	goto	l1738
  2136   000964  EFBF  F004         	goto	l399
  2137   000968                     l1738:
  2138                           
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 2, Range of values is 0 to 1
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            7     4 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145   000968  502A               	movf	??_RBT_simulateButtonPush^0,w,c
  2146   00096A  0A00               	xorlw	0	; case 0
  2147   00096C  B4D8               	btfsc	status,2,c
  2148   00096E  EFA2  F004         	goto	l395
  2149   000972  0A01               	xorlw	1	; case 1
  2150   000974  B4D8               	btfsc	status,2,c
  2151   000976  EFA6  F004         	goto	l401
  2152   00097A  EFBF  F004         	goto	l399
  2153   00097E                     l399:
  2154   00097E  0004               	clrwdt		;# 
  2155   000980                     
  2156                           ;source/remoteButton.c: 81:         _delay((unsigned long)((500)*(1000000/4000.0)));
  2157   000980  0EA3               	movlw	163
  2158   000982  6E2A               	movwf	??_RBT_simulateButtonPush^0,c
  2159   000984  0E55               	movlw	85
  2160   000986                     u667:
  2161   000986  2EE8               	decfsz	wreg,f,c
  2162   000988  D7FE               	bra	u667
  2163   00098A  2E2A               	decfsz	??_RBT_simulateButtonPush^0,f,c
  2164   00098C  D7FC               	bra	u667
  2165   00098E  0000               	nop	
  2166   000990                     
  2167                           ;source/remoteButton.c: 82:         LATD = 0xFF;
  2168   000990  688C               	setf	140,c	;volatile
  2169   000992  928A               	bcf	138,1,c	;volatile
  2170   000994  8293               	bsf	147,1,c	;volatile
  2171   000996  948A               	bcf	138,2,c	;volatile
  2172   000998  8493               	bsf	147,2,c	;volatile
  2173   00099A  0004               	clrwdt		;# 
  2174                           
  2175                           ;source/remoteButton.c: 89:         _delay((unsigned long)((500)*(1000000/4000.0)));
  2176   00099C  0EA3               	movlw	163
  2177   00099E  6E2A               	movwf	??_RBT_simulateButtonPush^0,c
  2178   0009A0  0E55               	movlw	85
  2179   0009A2                     u677:
  2180   0009A2  2EE8               	decfsz	wreg,f,c
  2181   0009A4  D7FE               	bra	u677
  2182   0009A6  2E2A               	decfsz	??_RBT_simulateButtonPush^0,f,c
  2183   0009A8  D7FC               	bra	u677
  2184   0009AA  0000               	nop	
  2185                           
  2186                           ;source/remoteButton.c: 91:         _delay((unsigned long)((100)*(1000000/4000.0)));
  2187   0009AC  0E21               	movlw	33
  2188   0009AE  6E2A               	movwf	??_RBT_simulateButtonPush^0,c
  2189   0009B0  0E76               	movlw	118
  2190   0009B2                     u687:
  2191   0009B2  2EE8               	decfsz	wreg,f,c
  2192   0009B4  D7FE               	bra	u687
  2193   0009B6  2E2A               	decfsz	??_RBT_simulateButtonPush^0,f,c
  2194   0009B8  D7FC               	bra	u687
  2195   0009BA  F000 F000          	nop2	
  2196   0009BE                     
  2197                           ;source/remoteButton.c: 93:     }
  2198   0009BE  2A2E               	incf	RBT_simulateButtonPush@i^0,f,c
  2199   0009C0                     l391:
  2200   0009C0  5027               	movf	RBT_simulateButtonPush@i8uNbOfPush^0,w,c
  2201   0009C2  5C2E               	subwf	RBT_simulateButtonPush@i^0,w,c
  2202   0009C4  A0D8               	btfss	status,0,c
  2203   0009C6  EFE7  F004         	goto	u471
  2204   0009CA  EFE9  F004         	goto	u470
  2205   0009CE                     u471:
  2206   0009CE  EF9E  F004         	goto	l1576
  2207   0009D2                     u470:
  2208   0009D2                     
  2209                           ;source/remoteButton.c: 94:     LATD = i8uBackupLedArray;
  2210   0009D2  C02D  FF8C         	movff	RBT_simulateButtonPush@i8uBackupLedArray,3980	;volatile
  2211   0009D6  0012               	return		;funcret
  2212   0009D8                     __end_of_RBT_simulateButtonPush:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _MOT_SwitchOnMotor *****************
  2216 ;; Defined at:
  2217 ;;		line 39 in file "source/motor.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0
  2233 ;;      Temps:          1       0       0       0       0       0       0
  2234 ;;      Totals:         1       0       0       0       0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 3
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text21
  2246   000C46                     __ptext21:
  2247                           	callstack 0
  2248   000C46                     _MOT_SwitchOnMotor:
  2249                           	callstack 27
  2250   000C46  968A               	bcf	138,3,c	;volatile
  2251   000C48                     
  2252                           ;source/motor.c: 42:     i16uMotorSwitchDelay = (uint16_t)(30000/10);
  2253   000C48  0E0B               	movlw	11
  2254   000C4A  6E12               	movwf	(_i16uMotorSwitchDelay+1)^0,c
  2255   000C4C  0EB8               	movlw	184
  2256   000C4E  6E11               	movwf	_i16uMotorSwitchDelay^0,c
  2257   000C50  0004               	clrwdt		;# 
  2258   000C52                     
  2259                           ;source/motor.c: 44:     _delay((unsigned long)((100)*(1000000/4000.0)));
  2260   000C52  0E21               	movlw	33
  2261   000C54  6E27               	movwf	??_MOT_SwitchOnMotor^0,c
  2262   000C56  0E76               	movlw	118
  2263   000C58                     u697:
  2264   000C58  2EE8               	decfsz	wreg,f,c
  2265   000C5A  D7FE               	bra	u697
  2266   000C5C  2E27               	decfsz	??_MOT_SwitchOnMotor^0,f,c
  2267   000C5E  D7FC               	bra	u697
  2268   000C60  F000 F000          	nop2	
  2269   000C64  0012               	return		;funcret
  2270   000C66                     __end_of_MOT_SwitchOnMotor:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _ADC_GetConversion *****************
  2274 ;; Defined at:
  2275 ;;		line 99 in file "source/driver/adc/src/adc.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  channel         1    wreg     enum E2730
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  channel         1    6[COMRAM] enum E2730
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    2[COMRAM] unsigned short 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2289 ;;      Params:         2       0       0       0       0       0       0
  2290 ;;      Locals:         1       0       0       0       0       0       0
  2291 ;;      Temps:          2       0       0       0       0       0       0
  2292 ;;      Totals:         5       0       0       0       0       0       0
  2293 ;;Total ram usage:        5 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 3
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text22
  2304   000B22                     __ptext22:
  2305                           	callstack 0
  2306   000B22                     _ADC_GetConversion:
  2307                           	callstack 27
  2308                           
  2309                           ;incstack = 0
  2310                           ;ADC_GetConversion@channel stored from wreg
  2311   000B22  6E2B               	movwf	ADC_GetConversion@channel^0,c
  2312   000B24                     
  2313                           ;source/driver/adc/src/adc.c: 99: adc_result_t ADC_GetConversion(adc_channel_t channel);
      +                          source/driver/adc/src/adc.c: 100: {;source/driver/adc/src/adc.c: 102:     ADCON0bits.CHS
      +                           = channel;
  2314   000B24  C02B  F029         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2315   000B28  4629               	rlncf	??_ADC_GetConversion^0,f,c
  2316   000B2A  4629               	rlncf	??_ADC_GetConversion^0,f,c
  2317   000B2C  50C2               	movf	194,w,c	;volatile
  2318   000B2E  1829               	xorwf	??_ADC_GetConversion^0,w,c
  2319   000B30  0BC3               	andlw	-61
  2320   000B32  1829               	xorwf	??_ADC_GetConversion^0,w,c
  2321   000B34  6EC2               	movwf	194,c	;volatile
  2322   000B36                     
  2323                           ;source/driver/adc/src/adc.c: 104:     ADCON0bits.ADON = 1;
  2324   000B36  80C2               	bsf	194,0,c	;volatile
  2325   000B38                     
  2326                           ;source/driver/adc/src/adc.c: 107:     _delay((unsigned long)((8)*(1000000/4000000.0)));
  2327   000B38  F000 F000          	nop2		;2 cycle nop
  2328   000B3C                     
  2329                           ;source/driver/adc/src/adc.c: 110:     ADCON0bits.GO_nDONE = 1;
  2330   000B3C  82C2               	bsf	194,1,c	;volatile
  2331   000B3E                     l34:
  2332                           
  2333                           ;source/driver/adc/src/adc.c: 113:     while (ADCON0bits.GO_nDONE)
  2334   000B3E  B2C2               	btfsc	194,1,c	;volatile
  2335   000B40  EFA4  F005         	goto	u441
  2336   000B44  EFA6  F005         	goto	u440
  2337   000B48                     u441:
  2338   000B48  EF9F  F005         	goto	l34
  2339   000B4C                     u440:
  2340   000B4C                     
  2341                           ;source/driver/adc/src/adc.c: 118:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2342   000B4C  50C4               	movf	196,w,c	;volatile
  2343   000B4E  6E2A               	movwf	(??_ADC_GetConversion+1)^0,c
  2344   000B50  6A29               	clrf	??_ADC_GetConversion^0,c
  2345   000B52  50C3               	movf	195,w,c	;volatile
  2346   000B54  2429               	addwf	??_ADC_GetConversion^0,w,c
  2347   000B56  6E27               	movwf	?_ADC_GetConversion^0,c
  2348   000B58  0E00               	movlw	0
  2349   000B5A  202A               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  2350   000B5C  6E28               	movwf	(?_ADC_GetConversion+1)^0,c
  2351   000B5E  0012               	return		;funcret
  2352   000B60                     __end_of_ADC_GetConversion:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _INTERRUPT_InterruptManager *****************
  2356 ;; Defined at:
  2357 ;;		line 80 in file "source/driver/system/src/interrupt.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2371 ;;      Params:         0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0
  2373 ;;      Temps:          2       0       0       0       0       0       0
  2374 ;;      Totals:         2       0       0       0       0       0       0
  2375 ;;Total ram usage:        2 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 2
  2378 ;; This function calls:
  2379 ;;		_Timer0_OverflowISR
  2380 ;; This function is called by:
  2381 ;;		Interrupt level 2
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	intcode
  2386   000008                     __pintcode:
  2387                           	callstack 0
  2388   000008                     _INTERRUPT_InterruptManager:
  2389                           	callstack 25
  2390                           
  2391                           ;incstack = 0
  2392   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2393   00000A  CFFA F025          	movff	pclath,??_INTERRUPT_InterruptManager
  2394   00000E  CFFB F026          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2395   000012                     
  2396                           ;source/driver/system/src/interrupt.c: 83:     if(INTCONbits.PEIE == 1)
  2397   000012  ACF2               	btfss	242,6,c	;volatile
  2398   000014  EF0E  F000         	goto	i2u21_41
  2399   000018  EF10  F000         	goto	i2u21_40
  2400   00001C                     i2u21_41:
  2401   00001C  EF20  F000         	goto	i2l90
  2402   000020                     i2u21_40:
  2403   000020                     
  2404                           ;source/driver/system/src/interrupt.c: 84:     {;source/driver/system/src/interrupt.c: 8
      +                          5:         if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2405   000020  AAF2               	btfss	242,5,c	;volatile
  2406   000022  EF15  F000         	goto	i2u22_41
  2407   000026  EF17  F000         	goto	i2u22_40
  2408   00002A                     i2u22_41:
  2409   00002A  EF20  F000         	goto	i2l90
  2410   00002E                     i2u22_40:
  2411   00002E  A4F2               	btfss	242,2,c	;volatile
  2412   000030  EF1C  F000         	goto	i2u23_41
  2413   000034  EF1E  F000         	goto	i2u23_40
  2414   000038                     i2u23_41:
  2415   000038  EF20  F000         	goto	i2l90
  2416   00003C                     i2u23_40:
  2417   00003C                     
  2418                           ;source/driver/system/src/interrupt.c: 86:         {;source/driver/system/src/interrupt.
      +                          c: 87:             Timer0_OverflowISR();
  2419   00003C  ECB0  F005         	call	_Timer0_OverflowISR	;wreg free
  2420   000040                     i2l90:
  2421   000040  C026  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2422   000044  C025  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2423   000048  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2424   00004A  0011               	retfie		f
  2425   00004C                     __end_of_INTERRUPT_InterruptManager:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _Timer0_OverflowISR *****************
  2429 ;; Defined at:
  2430 ;;		line 125 in file "source/driver/timer/src/tmr0.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2444 ;;      Params:         0       0       0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 1
  2451 ;; This function calls:
  2452 ;;		NULL
  2453 ;;		_Timer0_OverflowCallback@main$F694
  2454 ;; This function is called by:
  2455 ;;		_INTERRUPT_InterruptManager
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text24
  2460   000B60                     __ptext24:
  2461                           	callstack 0
  2462   000B60                     _Timer0_OverflowISR:
  2463                           	callstack 25
  2464   000B60                     
  2465                           ;source/driver/timer/src/tmr0.c: 128:     INTCONbits.TMR0IF = 0;
  2466   000B60  94F2               	bcf	242,2,c	;volatile
  2467   000B62                     
  2468                           ;source/driver/timer/src/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  2469   000B62  501E               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  2470   000B64  6ED7               	movwf	215,c	;volatile
  2471   000B66                     
  2472                           ;source/driver/timer/src/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  2473   000B66  C01D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2474   000B6A                     
  2475                           ;source/driver/timer/src/tmr0.c: 135:     if(Timer0_OverflowCallback)
  2476   000B6A  5039               	movf	_Timer0_OverflowCallback^0,w,c
  2477   000B6C  103A               	iorwf	(_Timer0_OverflowCallback+1)^0,w,c
  2478   000B6E  B4D8               	btfsc	status,2,c
  2479   000B70  EFBC  F005         	goto	i2u4_41
  2480   000B74  EFBE  F005         	goto	i2u4_40
  2481   000B78                     i2u4_41:
  2482   000B78  EFCB  F005         	goto	i2l255
  2483   000B7C                     i2u4_40:
  2484   000B7C                     
  2485                           ;source/driver/timer/src/tmr0.c: 136:     {;source/driver/timer/src/tmr0.c: 137:        
      +                           Timer0_OverflowCallback();
  2486   000B7C  D802               	call	i2u5_48
  2487   000B7E  EFCB  F005         	goto	i2u5_49
  2488   000B82                     i2u5_48:
  2489   000B82  0005               	push	
  2490   000B84  6EFA               	movwf	pclath,c
  2491   000B86  5039               	movf	_Timer0_OverflowCallback^0,w,c
  2492   000B88  6EFD               	movwf	tosl,c
  2493   000B8A  503A               	movf	(_Timer0_OverflowCallback+1)^0,w,c
  2494   000B8C  6EFE               	movwf	tosh,c
  2495   000B8E  50F8               	movf	tblptru,w,c
  2496   000B90  6EFF               	movwf	tosu,c
  2497   000B92  50FA               	movf	pclath,w,c
  2498   000B94  0012               	return		;indir
  2499   000B96                     i2u5_49:
  2500   000B96                     i2l255:
  2501   000B96  0012               	return		;funcret
  2502   000B98                     __end_of_Timer0_OverflowISR:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _Timer0_OverflowCallback@main$F694 *****************
  2506 ;; Defined at:
  2507 ;;		line 253 in file "source/main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2521 ;;      Params:         0       0       0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0
  2524 ;;      Totals:         0       0       0       0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;;		_Timer0_OverflowISR
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text25
  2536   000D16                     __ptext25:
  2537                           	callstack 0
  2538   000D16                     _Timer0_OverflowCallback@main$F694:
  2539                           	callstack 25
  2540   000D16                     
  2541                           ;source/main.c: 255:     bIsMainLoopTimingIsOver = 1;
  2542   000D16  0E01               	movlw	1
  2543   000D18  6E24               	movwf	_bIsMainLoopTimingIsOver^0,c	;volatile
  2544   000D1A  0012               	return		;funcret
  2545   000D1C                     __end_of_Timer0_OverflowCallback@main$F694:
  2546                           	callstack 0
  2547                           
  2548                           	psect	rparam
  2549   000000                     
  2550                           	psect	temp
  2551   000041                     btemp:
  2552                           	callstack 0
  2553   000041                     	ds	1
  2554   000000                     int$flags	set	btemp
  2555   000000                     wtemp8	set	btemp+1
  2556   000000                     ttemp5	set	btemp+1
  2557   000000                     ttemp6	set	btemp+4
  2558   000000                     ttemp7	set	btemp+8
  2559                           
  2560                           	psect	config
  2561                           
  2562                           ; Padding undefined space
  2563   300000                     	org	3145728
  2564   300000  FF                 	db	255
  2565                           
  2566                           ;Config register CONFIG1H @ 0x300001
  2567                           ;	Oscillator Selection bits
  2568                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2569                           ;	Fail-Safe Clock Monitor Enable bit
  2570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2571                           ;	Internal/External Oscillator Switchover bit
  2572                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2573   300001                     	org	3145729
  2574   300001  08                 	db	8
  2575                           
  2576                           ;Config register CONFIG2L @ 0x300002
  2577                           ;	Power-up Timer Enable bit
  2578                           ;	PWRTEN = OFF, PWRT disabled
  2579                           ;	Brown-out Reset Enable bits
  2580                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2581                           ;	Brown Out Reset Voltage bits
  2582                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2583   300002                     	org	3145730
  2584   300002  1F                 	db	31
  2585                           
  2586                           ;Config register CONFIG2H @ 0x300003
  2587                           ;	Watchdog Timer Enable bit
  2588                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2589                           ;	Watchdog Timer Postscale Select bits
  2590                           ;	WDTPS = 512, 1:512
  2591   300003                     	org	3145731
  2592   300003  12                 	db	18
  2593                           
  2594                           ; Padding undefined space
  2595   300004                     	org	3145732
  2596   300004  FF                 	db	255
  2597                           
  2598                           ;Config register CONFIG3H @ 0x300005
  2599                           ;	CCP2 MUX bit
  2600                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2601                           ;	PORTB A/D Enable bit
  2602                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2603                           ;	Low-Power Timer1 Oscillator Enable bit
  2604                           ;	LPT1OSC = ON, Timer1 configured for low-power operation
  2605                           ;	HFINTOSC Fast Start-up
  2606                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  2607                           ;	MCLR Pin Enable bit
  2608                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2609   300005                     	org	3145733
  2610   300005  85                 	db	133
  2611                           
  2612                           ;Config register CONFIG4L @ 0x300006
  2613                           ;	Stack Full/Underflow Reset Enable bit
  2614                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2615                           ;	Single-Supply ICSP Enable bit
  2616                           ;	LVP = ON, Single-Supply ICSP enabled
  2617                           ;	Extended Instruction Set Enable bit
  2618                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2619                           ;	Background Debugger Enable bit
  2620                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  2621   300006                     	org	3145734
  2622   300006  05                 	db	5
  2623                           
  2624                           ; Padding undefined space
  2625   300007                     	org	3145735
  2626   300007  FF                 	db	255
  2627                           
  2628                           ;Config register CONFIG5L @ 0x300008
  2629                           ;	Code Protection Block 0
  2630                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2631                           ;	Code Protection Block 1
  2632                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2633                           ;	Code Protection Block 2
  2634                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2635                           ;	Code Protection Block 3
  2636                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2637   300008                     	org	3145736
  2638   300008  0F                 	db	15
  2639                           
  2640                           ;Config register CONFIG5H @ 0x300009
  2641                           ;	Boot Block Code Protection bit
  2642                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2643                           ;	Data EEPROM Code Protection bit
  2644                           ;	CPD = OFF, Data EEPROM not code-protected
  2645   300009                     	org	3145737
  2646   300009  C0                 	db	192
  2647                           
  2648                           ;Config register CONFIG6L @ 0x30000A
  2649                           ;	Write Protection Block 0
  2650                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2651                           ;	Write Protection Block 1
  2652                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2653                           ;	Write Protection Block 2
  2654                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2655                           ;	Write Protection Block 3
  2656                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2657   30000A                     	org	3145738
  2658   30000A  0F                 	db	15
  2659                           
  2660                           ;Config register CONFIG6H @ 0x30000B
  2661                           ;	Configuration Register Write Protection bit
  2662                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2663                           ;	Boot Block Write Protection bit
  2664                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2665                           ;	Data EEPROM Write Protection bit
  2666                           ;	WRTD = OFF, Data EEPROM not write-protected
  2667   30000B                     	org	3145739
  2668   30000B  E0                 	db	224
  2669                           
  2670                           ;Config register CONFIG7L @ 0x30000C
  2671                           ;	Table Read Protection Block 0
  2672                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2673                           ;	Table Read Protection Block 1
  2674                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2675                           ;	Table Read Protection Block 2
  2676                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2677                           ;	Table Read Protection Block 3
  2678                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2679   30000C                     	org	3145740
  2680   30000C  0F                 	db	15
  2681                           
  2682                           ;Config register CONFIG7H @ 0x30000D
  2683                           ;	Boot Block Table Read Protection bit
  2684                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2685   30000D                     	org	3145741
  2686   30000D  40                 	db	64
  2687                           tosu	equ	0xFFF
  2688                           tosh	equ	0xFFE
  2689                           tosl	equ	0xFFD
  2690                           stkptr	equ	0xFFC
  2691                           pclatu	equ	0xFFB
  2692                           pclath	equ	0xFFA
  2693                           pcl	equ	0xFF9
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           prodh	equ	0xFF4
  2699                           prodl	equ	0xFF3
  2700                           indf0	equ	0xFEF
  2701                           postinc0	equ	0xFEE
  2702                           postdec0	equ	0xFED
  2703                           preinc0	equ	0xFEC
  2704                           plusw0	equ	0xFEB
  2705                           fsr0h	equ	0xFEA
  2706                           fsr0l	equ	0xFE9
  2707                           wreg	equ	0xFE8
  2708                           indf1	equ	0xFE7
  2709                           postinc1	equ	0xFE6
  2710                           postdec1	equ	0xFE5
  2711                           preinc1	equ	0xFE4
  2712                           plusw1	equ	0xFE3
  2713                           fsr1h	equ	0xFE2
  2714                           fsr1l	equ	0xFE1
  2715                           bsr	equ	0xFE0
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           preinc2	equ	0xFDC
  2720                           plusw2	equ	0xFDB
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         36
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    S558$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_OverflowCallback@main$F694(), 

    S558TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), 

    S558TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), 

    S558TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), 

    S558TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), 

    S558TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S558TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_OverflowCallback@main$F694(), NULL(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_OverflowCallback@main$F694(), 


Critical Paths under _main in COMRAM

    _main->___aldiv
    _SYSTEM_Initialize->_Timer0_Initialize
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1854
                                             16 COMRAM     4     4      0
                  _ADC_GetConversion
                 _MOT_SwitchOffMotor
                  _MOT_SwitchOnMotor
          _PIN_MANAGER_RefreshConfig
             _RBT_simulateButtonPush
                  _SYSTEM_Initialize
    _Timer0_OverflowCallbackRegister
                            ___aldiv
                      _detectSunRise
                       _detectSunSet
                     _getAdcFiltered
                _manageSoftTimerTick
 ---------------------------------------------------------------------------------
 (1) _manageSoftTimerTick                                  0     0      0       0
       _MOT_manageMotorSoftwareTimer
 ---------------------------------------------------------------------------------
 (2) _MOT_manageMotorSoftwareTimer                         0     0      0       0
                 _MOT_SwitchOffMotor
 ---------------------------------------------------------------------------------
 (3) _MOT_SwitchOffMotor                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getAdcFiltered                                       7     5      2     291
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _detectSunSet                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _detectSunRise                                        1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Timer0_OverflowCallbackRegister                      2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                  _Timer0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
          _PIN_MANAGER_RefreshConfig
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_RefreshConfig                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RBT_simulateButtonPush                               8     5      3     397
                                              2 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _MOT_SwitchOnMotor                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _Timer0_OverflowISR                                   0     0      0       0
                                NULL *
  _Timer0_OverflowCallback@main$F694 *
 ---------------------------------------------------------------------------------
 (6) _Timer0_OverflowCallback@main$F694                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _MOT_SwitchOffMotor
   _MOT_SwitchOnMotor
   _PIN_MANAGER_RefreshConfig
   _RBT_simulateButtonPush
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _PIN_MANAGER_RefreshConfig
     _Timer0_Initialize
     _WDT_Initialize
   _Timer0_OverflowCallbackRegister
   ___aldiv
   _detectSunRise
   _detectSunSet
   _getAdcFiltered
   _manageSoftTimerTick
     _MOT_manageMotorSoftwareTimer
       _MOT_SwitchOffMotor

 _INTERRUPT_InterruptManager (ROOT)
   _Timer0_OverflowISR
     NULL(Fake) *
     _Timer0_OverflowCallback@main$F694 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      40       1       68.1%
BITBIGSFR_1lh       21      0       0      21        0.0%
BITBIGSFRlll        1C      0       0      27        0.0%
BITBIGSFR_1hhl       B      0       0      20        0.0%
BITBIGSFR_5h         9      0       0      15        0.0%
BITBIGSFRlhh         7      0       0      25        0.0%
BITBIGSFRhh          4      0       0      23        0.0%
BITBIGSFRhl          4      0       0      24        0.0%
BITBIGSFR_2h         3      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      26        0.0%
BITBIGSFR_1hhh       1      0       0      19        0.0%
BITBIGSFR_1ll        1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      28        0.0%
DATA                 0      0      40      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 09 12:50:33 2024

                          _i16uMotorSwitchDelay 0011                                              l34 0B3E  
                                            l19 0CCA                                              l44 0D08  
                                            l37 0B5E                                              l81 0BCA  
                                            u10 0BDE                                              u11 0BDA  
                                            u20 0BF8                                              u21 0BF4  
                                            u80 0A7E                                              u81 0A7A  
                                            u90 0A94                                              u91 0A90  
                          ??_Timer0_OverflowISR 0025                                 _timer0ReloadVal 001D  
                     _i16uLuminosityAdcFiltered 0019                                             l100 0CFE  
                                           l113 0CF4                                             l126 0CEA  
                                           l401 094C                                             l233 0C44  
                                           l322 062A                                             l403 094E  
                                           l164 0CB2                                             l413 099A  
                                           l414 09D2                                             l182 0C98  
                                           l415 09D6                                             l167 0C24  
                                           l431 0CD6                                             l424 0C46  
                                           l440 0BFC                                             l344 0814  
                                           l337 07A6                                             l426 0C64  
                                           l258 0CE0                                             l522 0928  
                                           l187 0D14                                             l435 0BDE  
                                           l356 0A0A                                             l380 0D0E  
                                           l391 09C0                                             l367 0AC2  
                                           l359 0A66                                             l368 0AC4  
                                           l376 0B1E                                             l377 0B20  
                                           l395 0944                                             l397 0946  
                                           l399 097E                                             u100 0AAA  
                                           u101 0AA6                                             u120 0ADA  
                                           u121 0AD6                                             u130 0AF0  
                                           u131 0AEC                                             u140 0B06  
                                           u141 0B02                                             u500 088C  
                                           u501 0888                                             u510 08AE  
                                           u511 08AA                                             u440 0B4C  
                                           u520 08D6                                             u600 07A6  
                                           u441 0B48                                             u521 08D2  
                                           u601 07A2                                             u530 0908  
                                           u450 0A00                                             u610 07B8  
                                           u531 0904                                             u451 09FC  
                                           u611 07B4                                             u460 0A3C  
                                           u620 07C8                                             u540 0668  
                                           u461 0A38                                             u621 07C4  
                                           u541 0664                                             u470 09D2  
                                           u630 07F4                                             u550 06AC  
                                           u471 09CE                                             u631 07F0  
                                           u551 06A8                                             u480 0830  
                                           u640 0814                                             u560 06DE  
                                           u481 082C                                             u641 0810  
                                           u561 06DA                                             u490 0852  
                                           u570 070E                                             u491 084E  
                                           u571 070A                                             u580 076E  
                                           u581 076A                                             u657 0650  
                                           u594 0788                                             u667 0986  
                                           u595 0784                                             u677 09A2  
                                           u687 09B2                                             u697 0C58  
                    ??_INT0_SetInterruptHandler 0029                                             tosl 0FFD  
                                           wreg 0FE8                         RBT_simulateButtonPush@i 002E  
                     ??_Timer0_OverflowCallback 0025                     ??_PIN_MANAGER_RefreshConfig 0027  
                                          l1130 0CB4                                            l1122 0BFE  
                                          l1132 0CC8                                            l1124 0C22  
                                          l1134 0D00                                            l1150 0CAE  
                                          l1230 0A7E                                            l1126 0CCC  
                                          l1152 0C26                                            l1160 0D10  
                                          l1232 0A94                                            l1128 0CD4  
                                          l1154 0C28                                            l1234 0AAA  
                                          l1226 0A68                                            l1170 0BF8  
                                          l1244 0C48                                            l1148 0C9A  
                                          l1156 0C3C                                            l1236 0AB2  
                                          l1228 0A6C                                            l1164 0BCC  
                                          l1246 0C52                                            l1510 0CF6  
                                          l1158 0C3E                                            l1238 0ABA  
                                          l1166 0BE0                                            l1512 0CEC  
                                          l1520 0BAA                                            l1600 081E  
                                          l1280 0ADA                                            l1168 0BE6  
                                          l1530 0B36                                            l1514 0CE2  
                                          l1522 0BAC                                            l1610 0852  
                                          l1602 0822                                            l1282 0AF0  
                                          l1532 0B38                                            l1524 0BBA  
                                          l1516 0B98                                            l1540 0C80  
                                          l1620 0894                                            l1612 0862  
                                          l1604 0830                                            l1284 0B06  
                                          l1276 0AC6                                            l1700 075E  
                                          l1534 0B3C                                            l1526 0BBC  
                                          l1518 0B9E                                            l1542 0C94  
                                          l1630 08E6                                            l1622 08A0  
                                          l1614 0866                                            l1606 0840  
                                          l1286 0B0E                                            l1278 0ACA  
                                          l1550 09F0                                            l1294 0D0A  
                                          l1710 07B8                                            l1702 076E  
                                          l1536 0B4C                                            l1528 0B24  
                                          l1544 0CD8                                            l1640 0918  
                                          l1632 08E8                                            l1624 08AE  
                                          l1616 0876                                            l1608 0844  
                                          l1288 0B16                                            l1560 0A16  
                                          l1552 0A00                                            l1720 07D8  
                                          l1712 07C8                                            l1704 0776  
                                          l1634 08F2                                            l1626 08B8  
                                          l1618 088C                                            l1562 0A2A  
                                          l1554 0A06                                            l1546 09D8  
                                          l1730 0800                                            l1714 07CE  
                                          l1722 07E0                                            l1706 0792  
                                          l1650 0622                                            l1580 0954  
                                          l1572 092C                                            l1628 08D6  
                                          l1636 08F8                                            l1564 0A2C  
                                          l1548 09DC                                            l1724 07E4  
                                          l1716 07D2                                            l1708 0794  
                                          l1732 0804                                            l1660 063A  
                                          l1652 0624                                            l1644 060E  
                                          l1590 0996                                            l1582 0980  
                                          l1574 0930                                            l1638 0908  
                                          l1566 0A3C                                            l1726 07F4  
                                          l1718 07D4                                            l1670 0672  
                                          l1662 064E                                            l1646 0612  
                                          l1592 0998                                            l1584 0990  
                                          l1576 093C                                            l1568 0A5E  
                                          l1728 07FC                                            l1680 06B0  
                                          l1672 0676                                            l1664 0656  
                                          l1648 0616                                            l1594 09BE  
                                          l1586 0992                                            l1738 0968  
                                          l1690 06F4                                            l1682 06C2  
                                          l1674 0684                                            l1666 0658  
                                          l1658 062C                                            l1588 0994  
                                          l1692 06F8                                            l1684 06CA  
                                          l1676 0698                                            l1668 066C  
                                          l1694 070E                                            l1686 06DE  
                                          l1678 06AC                                            l1696 0736  
                                          l1688 06E2                                            l1698 075A  
                                          _IOCB 0F7D                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          _LATD 0F8C                                            _LATE 0F8D  
                                          i2l90 0040                                            _WPUB 0F7C  
                           _manageSoftTimerTick 0D0A                                            _main 060E  
                                          fsr2h 0FDA                                            fsr2l 0FD9  
                                          btemp 0041                       ?_INT2_SetInterruptHandler 0027  
                                          prodl 0FF3                                            start 004C  
                                  ___param_bank 0000               RBT_simulateButtonPush@i8uNbOfPush 0027  
                          ?_manageSoftTimerTick 0025                                 __end_of___aldiv 092A  
                                         ?_main 0025                                           _ANSEL 0F7E  
                                         _T0CON 0FD5                                           i2l350 0D1A  
                                         i2l255 0B96                                           _TMR0H 0FD7  
                                         _TMR0L 0FD6                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                           main@i8uNbOfLedToSet 0022                                  _WDT_Initialize 0D10  
                                         main@i 0038                        _INT1_SetInterruptHandler 0CEC  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         ttemp5 0042                                           ttemp6 0045  
                                         ttemp7 0049                                           status 0FD8  
                                         wtemp8 0042                        ??_RBT_simulateButtonPush 002A  
                               __initialization 0C66                            __end_of_detectSunSet 0B22  
                                  __end_of_main 081E                       _PIN_MANAGER_RefreshConfig 0BFE  
                   ?_INTERRUPT_InterruptManager 0025                           ??_manageSoftTimerTick 0027  
                                        ??_main 0035                                   __activetblptr 0002  
                        __end_of_WDT_Initialize 0D16                                          _ADCON0 0FC2  
                                        _ADCON1 0FC1                                          _ADCON2 0FC0  
                                        _ADRESH 0FC4                                          _ADRESL 0FC3  
                                        _ANSELH 0F7F                                          i2l1162 0D16  
                                        i2l1190 0B6A                                          i2l1192 0B7C  
                                        i2l1184 0B60                                          i2l1352 0012  
                                        i2l1186 0B62                                          i2l1354 0020  
                                        i2l1188 0B66                                          i2l1356 002E  
                                        i2l1358 003C                                          _OSCCON 0FD3  
                                _getAdcFiltered 09D8                                          _WDTCON 0FD1  
                                        i2u4_40 0B7C                                          i2u4_41 0B78  
                                        i2u5_48 0B82                                          i2u5_49 0B96  
                                        _Timer0 0601                                       ??___aldiv 002F  
                                        clear_0 0C6C                                          isa$std 0001  
                        detectSunSet@bReturnVal 0027                               ?_CLOCK_Initialize 0025  
                  _INT2_DefaultInterruptHandler 0000                              ??_CLOCK_Initialize 0027  
                                  __mediumconst 0000                                 ?_WDT_Initialize 0025  
                                        tblptru 0FF8                        ADC_GetConversion@channel 002B  
      INT2_SetInterruptHandler@InterruptHandler 0027        INT1_SetInterruptHandler@InterruptHandler 0027  
      INT0_SetInterruptHandler@InterruptHandler 0027                          __end_of_getAdcFiltered 0A68  
                             _SYSTEM_Initialize 0C80         __end_of_Timer0_OverflowCallbackRegister 0CE2  
             ??_Timer0_OverflowCallbackRegister 0029                ?_Timer0_OverflowCallbackRegister 0027  
               _Timer0_OverflowCallbackRegister 0CD8                                      __accesstop 0060  
                       __end_of__initialization 0C72                              ?_SYSTEM_Initialize 0025  
                                 ___rparam_used 0001                                  __pcstackCOMRAM 0025  
                         __end_of_detectSunRise 0AC6                             ??_SYSTEM_Initialize 0029  
                 ?_MOT_manageMotorSoftwareTimer 0025                __end_of_INT2_SetInterruptHandler 0CEC  
                     __end_of_SYSTEM_Initialize 0C9A                                 ?_getAdcFiltered 0027  
                         _INT0_InterruptHandler 003F                                      __pnvCOMRAM 0039  
                       detectSunRise@bReturnVal 0027                       _ti16uLuminosityAdcHistory 0001  
                    ??_INT1_SetInterruptHandler 0029                         _bIsMainLoopTimingIsOver 0024  
                        _RBT_simulateButtonPush 092A                                         i2u21_40 0020  
                                       i2u21_41 001C                                         i2u22_40 002E  
                                       i2u22_41 002A                                         i2u23_40 003C  
                                       i2u23_41 0038                                         _OSCTUNE 0F9B  
                                  _detectSunSet 0AC6                   getAdcFiltered@i16uAdcfiltered 002B  
                     ?_INT0_SetInterruptHandler 0027                                         __Hparam 0000  
                                       __Lparam 0000                                     _Timer0_Stop 0000  
                                       ___aldiv 081E                               _Timer0_Initialize 0C26  
                          _i16uCntLuminosityLow 0017                                    __psmallconst 0600  
                                       __pcinit 0C66                              ?_Timer0_Initialize 0025  
                                       __ramtop 0600                                         __ptext0 060E  
                                       __ptext1 0D0A                                         __ptext2 0BCC  
                                       __ptext3 0CCC                                         __ptext4 09D8  
                                       __ptext5 0AC6                                         __ptext6 0A68  
                                       __ptext7 081E                                         __ptext8 0CD8  
                                       __ptext9 0C80                        ?_Timer0_OverflowCallback 0025  
                                     _T0CONbits 0FD5       __end_of_Timer0_OverflowCallback@main$F694 0D1C  
             _Timer0_OverflowCallback@main$F694 0D16                                ___aldiv@dividend 0027  
                      ??_PIN_MANAGER_Initialize 0027                  ??_MOT_manageMotorSoftwareTimer 0027  
                           ??_Timer0_Initialize 0027                            end_of_initialization 0C72  
                      _INT2_SetInterruptHandler 0CE2         RBT_simulateButtonPush@i8uBackupLedArray 002D  
                                 __Lmediumconst 0000                       __end_of_Timer0_Initialize 0C46  
                   __end_of_manageSoftTimerTick 0D10                                ___aldiv@quotient 0031  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc2 0FDE                                ??_WDT_Initialize 0027  
                         _INT1_InterruptHandler 003D                                       _PORTBbits 0F81  
Timer0_OverflowCallbackRegister@CallbackHandler 0027                                       _TRISBbits 0F93  
                    __end_of_MOT_SwitchOffMotor 0CD8                                       _i16uDebug 0013  
                                __end_of_Timer0 060D                    __end_of_INTERRUPT_Initialize 0BCC  
                  _INT0_DefaultInterruptHandler 0000                                  _ADC_Initialize 0CB4  
                              ??_getAdcFiltered 0029                             start_initialization 0C66  
                        __end_of_ADC_Initialize 0CCC                         ?_RBT_simulateButtonPush 0027  
                                   __pbssCOMRAM 0001                __end_of_INT0_SetInterruptHandler 0D00  
                         _INT2_InterruptHandler 003B          RBT_simulateButtonPush@i16uPushDuration 0028  
                        _PIN_MANAGER_Initialize 0C9A                                       __pintcode 0008  
                                      ?___aldiv 0027                      __end_of_Timer0_OverflowISR 0B98  
                               ?_ADC_Initialize 0025                  __end_of_RBT_simulateButtonPush 09D8  
                  ??_INTERRUPT_InterruptManager 0025                                     __smallconst 0600  
                    ??_INT2_SetInterruptHandler 0029                                   _eDoorPosition 0023  
                          _INTERRUPT_Initialize 0B98                                 ___aldiv@divisor 002B  
                              _CLOCK_Initialize 0D00                                 ___aldiv@counter 002F  
                                      _LATBbits 0F8A                       ?_INT1_SetInterruptHandler 0027  
                   _i16uLuminosityAdcUnFiltered 001B                                        _PIR1bits 0F9E  
                                      _RCONbits 0FD0                                   _detectSunRise 0A68  
                                    _ADCON0bits 0FC2                              main@bBpManualPress 0020  
                    ?_PIN_MANAGER_RefreshConfig 0025                                     _INTCON2bits 0FF1  
                                   _INTCON3bits 0FF0                           ?_INTERRUPT_Initialize 0025  
                      _INT0_SetInterruptHandler 0CF6                                        __Hrparam 0000  
                                  _Timer0_Start 0000            __end_of_MOT_manageMotorSoftwareTimer 0BFE  
                  _MOT_manageMotorSoftwareTimer 0BCC                                        __Lrparam 0000  
                             _ADC_GetConversion 0B22                                  ?_detectSunRise 0025  
                            _MOT_SwitchOffMotor 0CCC                              ?_ADC_GetConversion 0027  
                               getAdcFiltered@i 002D                           _i16uCntLuminosityHigh 0015  
                           ?_MOT_SwitchOffMotor 0025                             ??_ADC_GetConversion 0029  
                                      __ptext10 0D10                                        __ptext11 0C26  
                                      __ptext20 092A                                        __ptext12 0C9A  
                                      __ptext21 0C46                                        __ptext13 0BFE  
                                      __ptext22 0B22                                        __ptext14 0B98  
                                      __ptext15 0CE2                                        __ptext24 0B60  
                                      __ptext16 0CEC                                        __ptext25 0D16  
                                      __ptext17 0CF6                                        __ptext18 0D00  
                                      __ptext19 0CB4               __end_of_PIN_MANAGER_RefreshConfig 0C26  
                          main@i8uBarGraphValue 0037                            ??_MOT_SwitchOffMotor 0027  
               RBT_simulateButtonPush@eButtonId 002C                       __end_of_ADC_GetConversion 0B60  
                                      isa$xinst 0000                                        int$flags 0041  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                  _INT1_DefaultInterruptHandler 0000                                      _INTCONbits 0FF2  
                          main@i8uBpSw1Debounce 0021                                   ?_detectSunSet 0025  
                        ??_INTERRUPT_Initialize 0029                               _MOT_SwitchOnMotor 0C46  
                       _Timer0_OverflowCallback 0039                                        intlevel2 0000  
                            ?_MOT_SwitchOnMotor 0025                         ?_PIN_MANAGER_Initialize 0025  
                              ??_ADC_Initialize 0027                             ??_MOT_SwitchOnMotor 0027  
                               ??_detectSunRise 0027                 getAdcFiltered@i16uAdcUnfiltered 0027  
                      __end_of_CLOCK_Initialize 0D0A                       __end_of_MOT_SwitchOnMotor 0C66  
              __end_of_INT1_SetInterruptHandler 0CF6                   getAdcFiltered@i8uHistoryIndex 001F  
                            _Timer0_OverflowISR 0B60                                  ??_detectSunSet 0027  
                                  ___aldiv@sign 0030                           _Timer0_PeriodCountSet 0000  
                __end_of_PIN_MANAGER_Initialize 0CB4                             ?_Timer0_OverflowISR 0025  
